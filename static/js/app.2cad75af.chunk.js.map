{"version":3,"sources":["assets/images/clown.png","assets/images/lion.png","assets/images/snake.png","assets/images/magic-wand.png","assets/images/ring.png","assets/images/trapeze.png","assets/images/unicycle.png","assets/images/juggling.png","assets/images/tightrope-walker.png","LinkingConfiguration.ts","styles.ts","components/Page.tsx","Home.tsx","quiz/constants.ts","quiz/Question.tsx","components/GetStarted.tsx","components/Anchor.tsx","quiz/Finished.tsx","quiz/Quiz.tsx","ball/CrystalBall.tsx","tarot/TarotCards.tsx","App.tsx","assets/images/circus.png","assets/images/crystal-ball.png","assets/images/tarot-card.png"],"names":["module","exports","linking","prefixes","Linking","config","screens","Quiz","Ball","Tarot","Home","THEME1","STYLES","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","main","row","flexDirection","width","rowCenter","footerTitle","paddingTop","fontSize","fontFamily","color","headerTitle","textTransform","title","paddingBottom","textAlign","subtitle","question","paddingLeft","paddingRight","answerBox","padding","margin","borderRadius","answerSelected","answerText","answerSelectedText","button","marginTop","buttonText","buttonBlue","buttonTextBlue","infoText","error","card","border","marginBottom","card_orange","card_blue","card_yellow","cardText","Page","memo","props","children","status","hideHeaderFooter","navigation","useFonts","Rye_400Regular","Livvic_400Regular","fontsLoaded","insets","useSafeAreaInsets","View","style","top","bottom","Image","source","circus","height","undefined","TouchableOpacity","onPress","navigate","Text","ball","QUESTIONS","text","answers","points","PERFORMERS","name","image","clown","juggling","magic","unicycle","ring","trapeze","tightrope","lion","snake","QuestionDisplay","next","useState","selectedAnswer","setSelectedAnswer","useMemo","sort","Math","random","onAnswerClick","useCallback","answer","setTimeout","map","GetStarted","icon","description","onClick","Anchor","_handlePress","href","Finished","reset","showQuizInfo","setShowQuizInfo","shareError","setShareError","reduce","val","performer","filter","perf","onShare","a","async","Share","share","message","url","result","action","sharedAction","activityType","dismissedAction","toLowerCase","indexOf","onQuizInfo","closeQuizInfo","ShowPerformer","getStarted","setGetStarted","setAnswers","questionIndex","length","quizQuestions","setQuizQuestions","currentQuestion","restartQuiz","startQuiz","slice","onNext","newAnswers","push","CrystalBall","startCrystalBall","TarotCards","startTarot","Stack","createNativeStackNavigator","App","NavigationContainer","LinkingConfiguration","Navigator","Screen","component","options","headerShown","StatusBar"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,2HCsB5BC,EAZqC,CAChDC,SAAU,CAACC,IAAgB,MAC3BC,OAAQ,CACJC,QAAS,CACLC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,KAAM,O,+BCfZC,EACM,UADNA,EAEM,UAFNA,EAGI,UAHJA,EAIK,UAJLA,EAKK,UAcEC,E,KAASC,EAAWC,OAAO,CACpCC,UAAW,CACPC,KAAM,EACNC,WAAY,SACZC,eAAgB,eAChBC,gBAAiBR,GAErBS,KAAM,CACFJ,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,gBAAiBR,GAErBU,IAAK,CACDC,cAAe,MACfJ,eAAgB,eAChBK,MAlBa,KAoBjBC,UAAW,CACPF,cAAe,MACfJ,eAAgB,eAChBK,MAvBa,KAyBjBE,YAAa,CACTC,WAAY,GACZC,SAAU,GACVC,WAAY,iBACZC,MAAOlB,GAEXmB,YAAa,CACTJ,WAAY,GACZC,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,GAEXqB,MAAO,CACHT,MAvCa,IAwCbU,cAAe,GACfC,UAAW,SACXP,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,GAEXwB,SAAU,CACND,UAAW,SACXP,SAAU,GACVC,WAAY,oBACZC,MAAOlB,EACPY,MApDa,KAsDjBa,SAAU,CACNF,UAAW,OACXP,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,EACPsB,cAAe,GACfI,YAAa,EACbC,aAAc,EACdf,MA/Da,KAiEjBgB,UAAW,CACPhB,MAlEa,IAmEbiB,QAAS,GACTC,OAAQ,GACRC,aAAc,GACdvB,gBAAiBR,GAErBgC,eAAgB,CACZxB,gBAAiBR,GAErBiC,WAAY,CACRjB,SAAU,GACVC,WAAY,oBACZC,MAAOlB,GAEXkC,mBAAoB,CAChBhB,MAAOlB,GAEXmC,OAAQ,CACJC,UAAW,GACXP,QAAS,GACTrB,gBAAiBR,EACjB+B,aAAc,IAElBM,WAAY,CACRrB,SAAU,GACVI,cAAe,YACfH,WAAY,iBACZC,MAAOlB,GAEXsC,WAAY,CACR9B,gBAAiBR,GAErBuC,eAAgB,CACZrB,MAAOlB,GAEXwC,SAAU,CACNxB,SAAU,GACVC,WAAY,iBACZC,MAAOlB,EACPuB,UAAW,UAEfkB,MAAO,CACHzB,SAAU,GACVC,WAAY,oBACZC,MAAOlB,EACPuB,UAAW,UAEfmB,KAAM,CACFC,OAAQ,aAAe3C,EACvB+B,aAAc,GACdF,QAAS,GACTO,UAAW,GACXQ,aAAc,IAElBC,YAAa,CACTrC,gBAAiBR,GAErB8C,UAAW,CACPtC,gBAAiBR,GAErB+C,YAAa,CACTvC,gBAAiBR,GAErBgD,SAAU,CACNhC,SAAU,GACVC,WAAY,iBACZC,MAAOlB,EACP0B,YAAa,M,yDCzIRuB,EAAkBC,gBAAK,SAAAC,GAChC,IAAQC,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,OAAQC,EAAiCH,EAAjCG,iBAAkBC,EAAeJ,EAAfI,WAC5C,EAAsBC,YAAS,CAAEC,mBAAgBC,wBAA1CC,EAAP,YACMC,EAASC,cAEf,OAAKF,EAGD,eAACG,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOG,UAAW,CAAEW,WAAY6C,EAAOI,IAAK1C,cAAesC,EAAOK,SAAhF,WACMX,GACE,eAACQ,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOS,KAArB,UACI,cAACwD,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,WACvCC,IAAXjB,GAAwBE,GACrB,cAACgB,EAAA,EAAD,CAAkBC,QAAS,kBAAMjB,EAAWkB,SAAS,SAArD,SACI,cAACC,EAAA,EAAD,CAAMX,MAAO9D,EAAOkB,YAApB,6BAGImD,IAAXjB,IAAyBE,GACtB,cAACmB,EAAA,EAAD,CAAMX,MAAO9D,EAAOkB,YAApB,2BAEQmD,IAAXjB,GAAwB,cAACa,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,MAC5E,cAACH,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,SAG3D,cAACP,EAAA,EAAD,CAAMC,MAAO9D,EAAOQ,KAApB,SACK2C,KAEHE,GACE,eAACQ,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOS,KAArB,UACI,cAACwD,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,WACvCC,IAAXjB,GAAwB,cAACqB,EAAA,EAAD,CAAMX,MAAO9D,EAAOa,YAApB,SAAkCuC,SAC/CiB,IAAXjB,GAAwB,cAACa,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,MAC5E,cAACH,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,YA3B1C,Q,kCCVhBtE,EAAmCmD,gBAAK,SAAAC,GACjD,IAAQI,EAAeJ,EAAfI,WAGR,OACI,cAACN,EAAD,CAAMK,kBAAgB,EAAtB,SACI,eAACQ,EAAA,EAAD,WACI,eAACS,EAAA,EAAD,CAAkBR,MAAO,CAAC9D,EAAOS,IAAKT,EAAOyC,KAAMzC,EAAO4C,aAAc2B,QAAS,kBAAMjB,EAAWkB,SAAS,SAA3G,UACI,cAACP,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAEnD,MANnC,GAMgDyD,OANhD,MAOG,cAACK,EAAA,EAAD,CAAMX,MAAO9D,EAAO+C,SAApB,gCAEJ,eAACuB,EAAA,EAAD,CAAkBR,MAAO,CAAC9D,EAAOS,IAAKT,EAAOyC,KAAMzC,EAAO6C,WAAY0B,QAAS,kBAAMjB,EAAWkB,SAAS,SAAzG,UACI,cAACC,EAAA,EAAD,CAAMX,MAAO9D,EAAO+C,SAApB,kCACA,cAACkB,EAAA,EAAD,CAAOC,OAAQQ,IAAMZ,MAAO,CAAEnD,MAXjC,GAW8CyD,OAX9C,SAaD,eAACE,EAAA,EAAD,CAAkBR,MAAO,CAAC9D,EAAOS,IAAKT,EAAOyC,KAAMzC,EAAO8C,aAAcyB,QAAS,kBAAMjB,EAAWkB,SAAS,UAA3G,UACI,cAACP,EAAA,EAAD,CAAOC,OAAQzB,IAAMqB,MAAO,CAAEnD,MAdjC,GAc8CyD,OAd9C,MAeG,cAACK,EAAA,EAAD,CAAMX,MAAO9D,EAAO+C,SAApB,8C,mLCZP4B,EAAwB,CAAC,CAClCC,KAAM,iEACNC,QAAS,CAAC,CACND,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,0CACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,KAEd,CACEF,KAAM,6CACNC,QAAS,CAAC,CACND,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,YACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,KAEd,CACEF,KAAM,wEACNC,QAAS,CAAC,CACND,KAAM,WACNE,OAAQ,GACV,CACEF,KAAM,SACNE,OAAQ,GACV,CACEF,KAAM,OACNE,OAAQ,GACV,CACEF,KAAM,QACNE,OAAQ,KAEd,CACEF,KAAM,uDACNC,QAAS,CAAC,CACND,KAAM,wCACNE,OAAQ,GACV,CACEF,KAAM,mCACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,0CACNE,OAAQ,KAEd,CACEF,KAAM,2EACNC,QAAS,CAAC,CACND,KAAM,oBACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,oCACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,KAEd,CACEF,KAAM,kFACNC,QAAS,CAAC,CACND,KAAM,wCACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,uBACNE,OAAQ,KAEd,CACEF,KAAM,oFACNC,QAAS,CAAC,CACND,KAAM,0BACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,+CACNE,OAAQ,GACV,CACEF,KAAM,iBACNE,OAAQ,KAEd,CACEF,KAAM,oEACNC,QAAS,CAAC,CACND,KAAM,kBACNE,OAAQ,GACV,CACEF,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,GACV,CACEF,KAAM,SACNE,OAAQ,KAEd,CACEF,KAAM,mDACNC,QAAS,CAAC,CACND,KAAM,oBACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,yBACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,KAEd,CACEF,KAAM,6EACNC,QAAS,CAAC,CACND,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,yBACNE,OAAQ,GACV,CACEF,KAAM,6BACNE,OAAQ,GACV,CACEF,KAAM,aACNE,OAAQ,KAEd,CACEF,KAAM,6CACNC,QAAS,CAAC,CACND,KAAM,gBACNE,OAAQ,GACV,CACEF,KAAM,cACNE,OAAQ,GACV,CACEF,KAAM,aACNE,OAAQ,GACV,CACEF,KAAM,YACNE,OAAQ,MAMHC,GAAa,CAAC,CACvBC,KAAM,QACNF,OAAQ,GACRG,MAAOC,KACT,CACEF,KAAM,UACNF,OAAQ,GACRG,MAAOE,KACT,CACEH,KAAM,WACNF,OAAQ,GACRG,MAAOG,KACT,CACEJ,KAAM,aACNF,OAAQ,GACRG,MAAOI,KACT,CACEL,KAAM,aACNF,OAAQ,GACRG,MAAOK,KACT,CACEN,KAAM,iBACNF,OAAQ,GACRG,MAAOM,KACT,CACEP,KAAM,mBACNF,OAAQ,GACRG,MAAOO,KACT,CACER,KAAM,aACNF,OAAQ,GACRG,MAAOQ,KACT,CACET,KAAM,gBACNF,OAAQ,GACRG,MAAOS,MC7MEC,GAA6B1C,gBAAK,SAAAC,GAC3C,IAAQ1B,EAAuC0B,EAAvC1B,SAAUoE,EAA6B1C,EAA7B0C,KAAMxC,EAAuBF,EAAvBE,OAAQE,EAAeJ,EAAfI,WAChC,EAA4CuC,qBAA5C,WAAOC,EAAP,KAAuBC,EAAvB,KACMlB,EAAUmB,mBAAQ,kBAAM,IAAIxE,EAASqD,SAASoB,MAAK,iBAAM,GAAMC,KAAKC,cAAW,CAAC3E,IAEhF4E,EAAgBC,uBAAY,SAACC,GAC3BR,IACJC,EAAkBO,GAElBC,YAAW,WACPX,EAAKU,KDbW,SCerB,CAACR,IAEJ,OACI,cAAC9C,EAAD,CAAMI,OAAQA,EAAQE,WAAYA,EAAlC,SACI,eAACO,EAAA,EAAD,WACI,cAACY,EAAA,EAAD,CAAMX,MAAO9D,EAAOwB,SAApB,SACKA,EAASoD,OAEbC,EAAQ2B,KAAI,SAACF,GACV,OACI,cAAChC,EAAA,EAAD,CAEIC,QAAS,kBAAM6B,EAAcE,IAC7BxC,MAAO,CACH9D,EAAO2B,UACP2E,IAAWR,EAAiB9F,EAAO+B,oBAAiBsC,GAL5D,SAQI,cAACI,EAAA,EAAD,CAAMX,MAAO,CACT9D,EAAOgC,WACPsE,IAAWR,EAAiB9F,EAAOiC,wBAAqBoC,GAF5D,SAIKiC,EAAO1B,QAXP0B,EAAOxB,mBCxB3B2B,GAAwBxD,gBAAK,SAAAC,GACtC,IAAQ0C,EAA+C1C,EAA/C0C,KAAMc,EAAyCxD,EAAzCwD,KAAMtF,EAAmC8B,EAAnC9B,MAAOuF,EAA4BzD,EAA5ByD,YAAavE,EAAec,EAAfd,WAElCwE,EAAUP,uBAAY,WACxBE,YAAW,WACPX,MACD,OACJ,IAEH,OACI,eAAC5C,EAAD,CAAMK,kBAAgB,EAAtB,UACI,cAACoB,EAAA,EAAD,CAAMX,MAAO9D,EAAOoB,MAApB,SACKA,IAEL,eAACyC,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOS,IAAK,CAAEY,cAAe,KAA3C,UACI,cAAC4C,EAAA,EAAD,CAAOC,OAAQwC,EAAM5C,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,MACjD,cAACH,EAAA,EAAD,CAAOC,OAAQwC,EAAM5C,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,MACjD,cAACH,EAAA,EAAD,CAAOC,OAAQwC,EAAM5C,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,SAErD,cAACK,EAAA,EAAD,CAAMX,MAAO9D,EAAOuB,SAApB,SACKoF,IAEL,cAACrC,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASqC,EAAjD,SACI,cAACnC,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,SACKA,Y,qnBCjCd,IAAMyE,GAAc,SAAC3D,GACxB,IAAM4D,EAAeT,uBAAY,WAC7B7G,IAAgB0D,EAAM6D,QACvB,IAEH,OACI,cAACtC,EAAA,EAAD,SAAUvB,GAAV,IAAiBqB,QAASuC,EAA1B,SACK5D,EAAMC,aCGN6D,GAAsB/D,gBAAK,SAAAC,GACpC,IAAQ+D,EAA+B/D,EAA/B+D,MAAOpC,EAAwB3B,EAAxB2B,QAASvB,EAAeJ,EAAfI,WACxB,EAAwCuC,qBAAxC,WAAOqB,EAAP,KAAqBC,EAArB,KACA,EAAoCtB,qBAApC,WAAOuB,EAAP,KAAmBC,EAAnB,KAEMvC,EAASD,EAAQyC,QAAO,SAACC,EAAK3B,GAChC,OAAO2B,EAAM3B,EAAKd,SACnB,GAEG0C,EADazC,GAAW0C,QAAO,SAACC,GAAD,OAAUA,EAAK5C,QAAUA,KACjC,GAEvB8B,EAAUP,uBAAY,WACxBE,YAAW,WACPjD,EAAWkB,SAAS,QACpByC,MACD,OACJ,IAEGU,EAAUtB,uBAAY,2BAAAuB,EAAAC,OAAA,4EAAAD,EAAA,MAECE,KAAMC,MAAM,CAC7BC,QAAS,4BAA8BR,EAAUxC,KAAO,IACxDiD,IAAK,2CAJW,QAEdC,EAFc,QAMTC,SAAWL,KAAMM,aACpBF,EAAOG,cAKJH,EAAOC,OAAWL,KAAMQ,iBAZf,iDAgBoC,KAApD,uBAAON,QAAQO,cAAcC,QAAQ,YACrCnB,GAAc,uBAAOW,UAAW,gDAjBhB,kEAoBzB,CAACR,IAEEiB,EAAapC,uBAAY,WAC3Bc,GAAgB,KACjB,IAEGuB,EAAgBrC,uBAAY,WAC9Bc,GAAgB,KACjB,IAEH,OACI,cAACnE,EAAD,UACKkE,EACG,qCACI,cAACzC,EAAA,EAAD,CAAMX,MAAO,CAAC9D,EAAOoB,MAAO,CAAEL,SAAU,KAAxC,kCACA,eAAC8C,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOY,WAArB,UACI,cAAC+H,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,WAElE,eAACpB,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOY,WAArB,UACI,cAAC+H,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,WAElE,eAACpB,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOY,WAArB,UACI,cAAC+H,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,QAC9D,cAAC0D,GAAD,CAAe3D,KAAMD,GAAW,GAAGC,KAAMC,MAAOF,GAAW,GAAGE,WAElE,cAACX,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASmE,EAAjD,SACI,cAACjE,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,+BAIJ,eAACyB,EAAA,EAAD,CAAMC,MAAO,CAAEhD,WAAY,IAA3B,UACI,eAAC2D,EAAA,EAAD,CAAMX,MAAO,CAAE/C,SAAU,IAAzB,oCAC4B,IACxB,cAAC,GAAD,CAAQgG,KAAK,6CAAb,mCAIJ,eAACtC,EAAA,EAAD,CAAMX,MAAO,CAAE/C,SAAU,IAAzB,uCAC+B,IAC3B,cAAC,GAAD,CAAQgG,KAAK,+CAAb,+BAOZ,qCACI,cAACtC,EAAA,EAAD,CAAMX,MAAO9D,EAAOoB,MAApB,2BAGA,cAAC6C,EAAA,EAAD,CAAOC,OAAQsD,EAAUvC,MAAOnB,MAAO,CAAEnD,MJ2E9B,II3EsDyD,OJ2EtD,OI1EX,cAACK,EAAA,EAAD,CAAMX,MAAO9D,EAAOuB,SAApB,SACKiG,EAAUxC,OAEf,eAACnB,EAAA,EAAD,CAAMC,MAAO,CAAC9D,EAAOS,KAArB,UACI,cAAC6D,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASqC,EAAjD,SACI,cAACnC,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,oBAIJ,cAACkC,EAAA,EAAD,CAAkBR,MAAO,CAAC9D,EAAOkC,OAAQlC,EAAOqC,YAAakC,QAASoD,EAAtE,SACI,cAAClD,EAAA,EAAD,CAAMX,MAAO,CAAC9D,EAAOoC,WAAYpC,EAAOsC,gBAAxC,qBAIJ,cAACgC,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASkE,EAAjD,SACI,cAAChE,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,4BAKPgF,GACG,cAAC3C,EAAA,EAAD,CAAMX,MAAO,CAAC9D,EAAOwC,OAArB,SAA8B4E,YAahDuB,GAA+B1F,gBAAK,SAAAC,GACtC,OACI,eAACW,EAAA,EAAD,CAAMC,MAAO,CAAExD,eAAgB,eAAgBD,WAAY,SAAUM,MAAO,IAAKiB,QAAS,IAA1F,UACI,cAACqC,EAAA,EAAD,CAAOC,OAAQhB,EAAM+B,MAAOnB,MAAO,CAAEnD,MAAO,GAAIyD,OAAQ,MACxD,cAACK,EAAA,EAAD,CAAMX,MAAO,CAAC9D,EAAOuC,UAArB,SAAiCW,EAAM8B,aCxItCrF,GAAmCsD,gBAAK,SAAAC,GACjD,IAAQI,EAAeJ,EAAfI,WACR,EAAoCuC,oBAAkB,GAAtD,WAAO+C,EAAP,KAAmBC,EAAnB,KACA,EAA8BhD,mBAAmB,IAAjD,WAAOhB,EAAP,KAAgBiE,EAAhB,KACMC,EAAgB/C,mBAAQ,kBAAMnB,EAAQmE,SAAQ,CAACnE,IACrD,EAA0CgB,mBAAqB,IAA/D,WAAOoD,EAAP,KAAsBC,EAAtB,KACMC,EAAkBnD,mBAAQ,kBAAMiD,EAAcF,KAAgB,CAACE,EAAeF,IAE9EK,EAAc/C,uBAAY,WAC5BwC,GAAc,GACdC,EAAW,MACZ,IAEGO,EAAYhD,uBAAY,WAC1B6C,EAAiB,IAAIvE,GAAWsB,MAAK,iBAAM,GAAMC,KAAKC,YAAUmD,MAAM,ELX/C,KKYvBT,GAAc,KACf,IAEGU,EAASlD,uBAAY,SAACC,GACxB,IAAMkD,EAAU,IAAO3E,GACvB2E,EAAWC,KAAKnD,GAChBwC,EAAWU,KACZ,CAAC3E,IAEJ,OAAI+D,EAEI,cAACnC,GAAD,CACIb,KAAMyD,EACN3C,KAAMvC,IACN/C,MAAO,kBACPuF,YAAa,2BACbvE,WAAY,gBAKpB2G,GAAiBE,EAAcD,OACxB,cAAChC,GAAD,CAAUnC,QAASA,EAASoC,MAAOmC,EAAa9F,WAAYA,IAInE,cAACqC,GAAD,CAEIvC,OAAM,aAAcyB,EAAQmE,OAAS,GAA/B,OAAuCC,EAAcD,OAC3DxH,SAAU2H,EACVvD,KAAM2D,EACNjG,WAAYA,GAJPyF,MC3CJW,GAA0CzG,gBAAK,SAAAC,GACxD,IAAQI,EAAeJ,EAAfI,WACR,EAAoCuC,oBAAkB,GAAtD,WAAO+C,EAAP,KAAmBC,EAAnB,KAEMjC,EAAUP,uBAAY,WACxBE,YAAW,WACPjD,EAAWkB,SAAS,UACrB,OACJ,IAEGmF,EAAmBtD,uBAAY,WACjCwC,GAAc,KACf,IAEH,OAAID,EAEI,cAACnC,GAAD,CACIb,KAAM+D,EACNjD,KAAMhC,IACNtD,MAAO,uBACPuF,YAAa,wCACbvE,WAAY,gBAMpB,eAACY,EAAD,CAAMK,kBAAgB,EAACC,WAAYA,EAAnC,UACI,cAACO,EAAA,EAAD,UACI,cAACY,EAAA,EAAD,qDAIJ,cAACZ,EAAA,EAAD,UACI,cAACS,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASqC,EAAjD,SACI,cAACnC,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,4BCnCPwH,GAAyC3G,gBAAK,SAAAC,GACvD,IAAQI,EAAeJ,EAAfI,WACR,EAAoCuC,oBAAkB,GAAtD,WAAO+C,EAAP,KAAmBC,EAAnB,KAEMjC,EAAUP,uBAAY,WACxBE,YAAW,WACPjD,EAAWkB,SAAS,UACrB,OACJ,IAEGqF,EAAaxD,uBAAY,WAC3BwC,GAAc,KACf,IAEH,OAAID,EAEI,cAACnC,GAAD,CACIb,KAAMiE,EACNnD,KAAMjE,IACNrB,MAAO,wBACPuF,YAAa,oCACbvE,WAAY,gBAMpB,eAACY,EAAD,CAAMK,kBAAgB,EAACC,WAAYA,EAAnC,UACI,cAACO,EAAA,EAAD,UACI,cAACY,EAAA,EAAD,sDAIJ,cAACZ,EAAA,EAAD,UACI,cAACS,EAAA,EAAD,CAAkBR,MAAO9D,EAAOkC,OAAQqC,QAASqC,EAAjD,SACI,cAACnC,EAAA,EAAD,CAAMX,MAAO9D,EAAOoC,WAApB,4BChCd0H,GAAQC,cAEC,SAASC,KACtB,OACE,eAAC,IAAD,WACI,cAACC,EAAA,EAAD,CAAqB3K,QAAS4K,EAA9B,SACI,eAACJ,GAAMK,UAAP,WACI,cAACL,GAAMM,OAAP,CAAcpF,KAAK,OAAOqF,UAAWvK,EAAMwK,QAAS,CAAEC,aAAa,KACnE,cAACT,GAAMM,OAAP,CAAcpF,KAAK,OAAOqF,UAAW1K,GAAM2K,QAAS,CAAEC,aAAa,KACnE,cAACT,GAAMM,OAAP,CAAcpF,KAAK,OAAOqF,UAAWX,GAAaY,QAAS,CAAEC,aAAa,KAC1E,cAACT,GAAMM,OAAP,CAAcpF,KAAK,QAAQqF,UAAWT,GAAYU,QAAS,CAAEC,aAAa,UAGlF,cAACC,EAAA,EAAD,S,6ECzBRpL,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/app.2cad75af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clown.8188e9df.png\";","module.exports = __webpack_public_path__ + \"static/media/lion.c830fd27.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.d78135c9.png\";","module.exports = __webpack_public_path__ + \"static/media/magic-wand.c4a9018f.png\";","module.exports = __webpack_public_path__ + \"static/media/ring.d7271b62.png\";","module.exports = __webpack_public_path__ + \"static/media/trapeze.70db2279.png\";","module.exports = __webpack_public_path__ + \"static/media/unicycle.1adcc726.png\";","module.exports = __webpack_public_path__ + \"static/media/juggling.4bd31626.png\";","module.exports = __webpack_public_path__ + \"static/media/tightrope-walker.51f08343.png\";","import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\ntype RootStackParamList = {\n    Quiz: undefined;\n    Ball: undefined;\n    Tarot: undefined;\n    Home: undefined;\n};\n\nconst linking: LinkingOptions<RootStackParamList> = {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n        screens: {\n            Quiz: 'Quiz',\n            Ball: 'Ball',\n            Tarot: 'Tarot',\n            Home: '*',\n        },\n    },\n};\n\nexport default linking;\n","import { StyleSheet, StatusBar } from \"react-native\";\n\nconst THEME1 = {\n    yellow: '#f2bd4d',\n    orange: '#ec5d37',\n    blue: '#0da9b1',\n    light: '#ffedd4',\n    green: '#004649',\n}\nconst THEME2 = {\n    navy: '#3e4f6b',\n    brown: '#302d2c',\n    light: '#f2e4d0',\n    tan: '#eacaa4',\n    orange: '#f35519',\n    yellow: '#fdd15b',\n    blue: '#9fc9c1',\n}\n\nexport const WIDTH = 350;\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        backgroundColor: THEME1.light,\n    },\n    main: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: THEME1.light,\n    },\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: WIDTH,\n    },\n    rowCenter: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        width: WIDTH,\n    },\n    footerTitle: {\n        paddingTop: 10,\n        fontSize: 20,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.blue,\n    },\n    headerTitle: {\n        paddingTop: 10,\n        fontSize: 25,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    title: {\n        width: WIDTH,\n        paddingBottom: 40,\n        textAlign: 'center',\n        fontSize: 45,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    subtitle: {\n        textAlign: 'center',\n        fontSize: 50,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.orange,\n        width: WIDTH,\n    },\n    question: {\n        textAlign: 'left',\n        fontSize: 23,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.orange,\n        paddingBottom: 20,\n        paddingLeft: 5,\n        paddingRight: 5,\n        width: WIDTH,\n    },\n    answerBox: {\n        width: WIDTH,\n        padding: 20,\n        margin: 10,\n        borderRadius: 10,\n        backgroundColor: THEME1.yellow,\n    },\n    answerSelected: {\n        backgroundColor: THEME1.orange,\n    },\n    answerText: {\n        fontSize: 18,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.green,\n    },\n    answerSelectedText: {\n        color: THEME1.light,\n    },\n    button: {\n        marginTop: 40,\n        padding: 15,\n        backgroundColor: THEME1.yellow,\n        borderRadius: 10,\n    },\n    buttonText: {\n        fontSize: 15,\n        textTransform: 'uppercase',\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.green,\n    },\n    buttonBlue: {\n        backgroundColor: THEME1.blue,\n    },\n    buttonTextBlue: {\n        color: THEME1.light,\n    },\n    infoText: {\n        fontSize: 15,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.green,\n        textAlign: 'center',\n    },\n    error: {\n        fontSize: 20,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.orange,\n        textAlign: 'center',\n    },\n    card: {\n        border: 'solid 1px ' + THEME1.green,\n        borderRadius: 15,\n        padding: 10,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    card_orange: {\n        backgroundColor: THEME1.orange,\n    },\n    card_blue: {\n        backgroundColor: THEME1.blue,\n    },\n    card_yellow: {\n        backgroundColor: THEME1.yellow,\n    },\n    cardText: {\n        fontSize: 30,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.light,\n        paddingLeft: 20,\n    }\n});","import React, { FC, memo } from 'react';\nimport { View, Image, Text, TouchableOpacity } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { Rye_400Regular, useFonts } from \"@expo-google-fonts/rye\";\nimport { Livvic_400Regular } from \"@expo-google-fonts/livvic\";\n\nimport { STYLES } from \"../styles\";\nimport circus from '../assets/images/circus.png';\n\ninterface Props {\n    hideHeaderFooter?: boolean;\n    status?: string;\n    navigation?: any;\n}\n\nexport const Page: FC<Props> = memo(props => {\n    const { children, status, hideHeaderFooter, navigation } = props;\n    const [fontsLoaded] = useFonts({ Rye_400Regular, Livvic_400Regular });\n    const insets = useSafeAreaInsets();\n\n    if (!fontsLoaded) return null;\n\n    return (\n        <View style={[STYLES.container, { paddingTop: insets.top, paddingBottom: insets.bottom }]}>\n            {!hideHeaderFooter && (\n                <View style={[STYLES.row]}>\n                    <Image source={circus} style={{ width: 50, height: 50 }} />\n                    {status !== undefined && navigation && (\n                        <TouchableOpacity onPress={() => navigation.navigate('Home')}>\n                            <Text style={STYLES.headerTitle}>RubeFest</Text>\n                        </TouchableOpacity>\n                    )}\n                    {status !== undefined && !navigation && (\n                        <Text style={STYLES.headerTitle}>RubeFest</Text>\n                    )}\n                    {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                    <Image source={circus} style={{ width: 50, height: 50 }} />\n                </View>\n            )}\n            <View style={STYLES.main}>\n                {children}\n            </View>\n            {!hideHeaderFooter && (\n                <View style={[STYLES.row]}>\n                    <Image source={circus} style={{ width: 50, height: 50 }} />\n                    {status !== undefined && <Text style={STYLES.footerTitle}>{status}</Text>}\n                    {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                    <Image source={circus} style={{ width: 50, height: 50 }} />\n                </View>\n            )}\n        </View>\n    )\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\nimport { Text, TouchableOpacity, Image, View } from 'react-native'\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\n\nimport { STYLES } from \"./styles\";\nimport { Page } from './components/Page';\nimport ball from './assets/images/crystal-ball.png';\nimport circus from './assets/images/circus.png';\nimport card from './assets/images/tarot-card.png';\n\nexport const Home: FC<NativeStackScreenProps> = memo(props => {\n    const { navigation } = props;\n    const size = 85;\n\n    return (\n        <Page hideHeaderFooter>\n            <View>\n                <TouchableOpacity style={[STYLES.row, STYLES.card, STYLES.card_orange]} onPress={() => navigation.navigate('Quiz')}>\n                    <Image source={circus} style={{ width: size, height: size }} />\n                    <Text style={STYLES.cardText}>RubeFest Circus</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={[STYLES.row, STYLES.card, STYLES.card_blue]} onPress={() => navigation.navigate('Ball')}>\n                    <Text style={STYLES.cardText}>Cletus' Crystal Ball</Text>\n                    <Image source={ball} style={{ width: size, height: size }} />\n                </TouchableOpacity>\n                <TouchableOpacity style={[STYLES.row, STYLES.card, STYLES.card_yellow]} onPress={() => navigation.navigate('Tarot')}>\n                    <Image source={card} style={{ width: size, height: size }} />\n                    <Text style={STYLES.cardText}>Cletus' Tarot Reading</Text>\n                </TouchableOpacity>\n            </View>\n        </Page>\n    )\n});\n","import { Question } from \"./model\";\nimport clown from '../assets/images/clown.png';\nimport lion from '../assets/images/lion.png';\nimport snake from '../assets/images/snake.png';\nimport magic from '../assets/images/magic-wand.png';\nimport ring from '../assets/images/ring.png';\nimport trapeze from '../assets/images/trapeze.png';\nimport unicycle from '../assets/images/unicycle.png';\nimport juggling from '../assets/images/juggling.png';\nimport tightrope from '../assets/images/tightrope-walker.png';\n\nexport const ACTION_TIMER = 1500;\n\nexport const TOTAL_QUESTIONS = 10;\n\nexport const QUESTIONS: Question[] = [{\n    text: 'If you found yourself up on the tightrope, what would you say?',\n    answers: [{\n        text: 'GET ME DOWN!',\n        points: 1,\n    },{\n        text: 'This isn\\'t so bad.',\n        points: 2,\n    },{\n        text: 'That net looks like it should catch me.',\n        points: 3,\n    },{\n        text: 'HI MOM!',\n        points: 4,\n    }]\n},{\n    text: 'What snack would you choose at the circus?',\n    answers: [{\n        text: 'Cotton Candy',\n        points: 1,\n    },{\n        text: 'Ice Cream',\n        points: 2,\n    },{\n        text: 'Popcorn',\n        points: 3,\n    },{\n        text: 'Peanuts',\n        points: 4,\n    }]\n},{\n    text: 'If you could pick any circus animal as a pet, which would you choose?',\n    answers: [{\n        text: 'Elephant',\n        points: 1,\n    },{\n        text: 'Monkey',\n        points: 2,\n    },{\n        text: 'Lion',\n        points: 3,\n    },{\n        text: 'Tiger',\n        points: 4,\n    }]\n},{\n    text: 'If the circus needed a new musical act, would you...',\n    answers: [{\n        text: 'Run out the door as fast as you could',\n        points: 1,\n    },{\n        text: 'Stay in your seat and clap along',\n        points: 2,\n    },{\n        text: 'Join the back-up singers',\n        points: 3,\n    },{\n        text: 'Run up on stage and grab the microphone',\n        points: 4,\n    }]\n},{\n    text: 'If you and your fellow clowns were getting into a tiny car, would you...',\n    answers: [{\n        text: 'Make a run for it',\n        points: 1,\n    },{\n        text: 'Be the last one in',\n        points: 2,\n    },{\n        text: 'Join them somewhere in the middle',\n        points: 3,\n    },{\n        text: 'Be the first one in',\n        points: 4,\n    }]\n},{\n    text: 'If you couldn\\'t pay for your circus ticket and had to work it off, would you...',\n    answers: [{\n        text: 'Sell popcorn at the concession stands',\n        points: 1,\n    },{\n        text: 'Fold the acrobats tights',\n        points: 2,\n    },{\n        text: 'Shovel the elephant poop',\n        points: 3,\n    },{\n        text: 'Give the lion a bath',\n        points: 4,\n    }]\n},{\n    text: 'If you were the motorcycle driver jumping through the flaming hoops, would you...',\n    answers: [{\n        text: 'Get a fire extinguisher',\n        points: 1,\n    },{\n        text: 'Use a stunt double',\n        points: 2,\n    },{\n        text: 'Close your eyes and drive as fast as you can',\n        points: 3,\n    },{\n        text: 'Add more hoops',\n        points: 4,\n    }]\n},{\n    text: 'If you were part of a famous juggling act, what would you juggle?',\n    answers: [{\n        text: 'Stuffed animals',\n        points: 1,\n    },{\n        text: 'Bowling pins',\n        points: 2,\n    },{\n        text: 'Torches lit on fire',\n        points: 3,\n    },{\n        text: 'Knives',\n        points: 4,\n    }]\n},{\n    text: 'If you owned the circus, what would you name it?',\n    answers: [{\n        text: 'Under the Big Top',\n        points: 1,\n    },{\n        text: 'Send in the Clowns',\n        points: 2,\n    },{\n        text: 'Acro-glad You Are Here',\n        points: 3,\n    },{\n        text: 'Lion Around All Day',\n        points: 4,\n    }]\n},{\n    text: 'If working for the circus made you rich, what would you do with the money?',\n    answers: [{\n        text: 'Let everyone in for free',\n        points: 1,\n    },{\n        text: 'Put on even more shows',\n        points: 2,\n    },{\n        text: 'Use it to buy more animals',\n        points: 3,\n    },{\n        text: 'Take a nap',\n        points: 4,\n    }]\n},{\n    text: 'What drink would you choose at the circus?',\n    answers: [{\n        text: 'Bottled Water',\n        points: 1,\n    },{\n        text: 'Blue Slushy',\n        points: 2,\n    },{\n        text: 'Red Slushy',\n        points: 3,\n    },{\n        text: 'Cold Beer',\n        points: 4,\n    }]\n}];\n\nexport const FINAL_PERF_SIZE = 200;\n\nexport const PERFORMERS = [{\n    name: 'Clown',\n    points: 14,\n    image: clown,\n},{\n    name: 'Juggler',\n    points: 17,\n    image: juggling,\n},{\n    name: 'Magician',\n    points: 20,\n    image: magic,\n},{\n    name: 'Unicyclist',\n    points: 23,\n    image: unicycle,\n},{\n    name: 'Ringmaster',\n    points: 26,\n    image: ring,\n},{\n    name: 'Trapeze Artist',\n    points: 29,\n    image: trapeze,\n},{\n    name: 'Tightrope Walker',\n    points: 33,\n    image: tightrope,\n},{\n    name: 'Lion Tamer',\n    points: 36,\n    image: lion,\n},{\n    name: 'Snake Charmer',\n    points: 40,\n    image: snake,\n}];","import React, { FC, memo, useMemo, useState, useCallback } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native'\nimport { Question, Answer } from \"./model\";\nimport { ACTION_TIMER } from \"./constants\";\nimport { STYLES } from \"../styles\";\nimport { Page } from \"../components/Page\";\n\ninterface Props {\n    status: string;\n    question: Question;\n    next: (selectedAnswer: Answer) => void;\n    navigation: any;\n}\n\nexport const QuestionDisplay: FC<Props> = memo(props => {\n    const { question, next, status, navigation } = props;\n    const [selectedAnswer, setSelectedAnswer] = useState<Answer>();\n    const answers = useMemo(() => [...question.answers].sort(() => 0.5 - Math.random()), [question]);\n\n    const onAnswerClick = useCallback((answer: Answer) => {\n        if (selectedAnswer) return;\n        setSelectedAnswer(answer);\n\n        setTimeout(() => {\n            next(answer);\n        }, ACTION_TIMER);\n    }, [selectedAnswer]);\n\n    return (\n        <Page status={status} navigation={navigation}>\n            <View>\n                <Text style={STYLES.question}>\n                    {question.text}\n                </Text>\n                {answers.map((answer) => {\n                    return (\n                        <TouchableOpacity\n                            key={answer.points}\n                            onPress={() => onAnswerClick(answer)}\n                            style={[\n                                STYLES.answerBox,\n                                answer === selectedAnswer ? STYLES.answerSelected : undefined,\n                            ]}\n                        >\n                            <Text style={[\n                                STYLES.answerText,\n                                answer === selectedAnswer ? STYLES.answerSelectedText : undefined,\n                            ]}>\n                                {answer.text}\n                            </Text>\n                        </TouchableOpacity>\n                    )\n                })}\n            </View>\n        </Page>\n    )\n});\n","import React, { FC, memo, useCallback } from 'react';\nimport { Text, TouchableOpacity, View, Image } from 'react-native'\nimport { STYLES } from \"../styles\";\nimport { Page } from \"../components/Page\";\n\ninterface Props {\n    icon: any;\n    title: string;\n    description: string;\n    buttonText: string;\n    next: () => void;\n}\n\nexport const GetStarted: FC<Props> = memo(props => {\n    const { next, icon, title, description, buttonText } = props;\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            next();\n        }, 500);\n    }, []);\n\n    return (\n        <Page hideHeaderFooter>\n            <Text style={STYLES.title}>\n                {title}\n            </Text>\n            <View style={[STYLES.row, { paddingBottom: 40 }]}>\n                <Image source={icon} style={{ width: 50, height: 50 }} />\n                <Image source={icon} style={{ width: 50, height: 50 }} />\n                <Image source={icon} style={{ width: 50, height: 50 }} />\n            </View>\n            <Text style={STYLES.subtitle}>\n                {description}\n            </Text>\n            <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                <Text style={STYLES.buttonText}>\n                    {buttonText}\n                </Text>\n            </TouchableOpacity>\n        </Page>\n    )\n});\n","import React, { FC, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport * as Linking from 'expo-linking';\n\nexport const Anchor: FC = ((props) => {\n    const _handlePress = useCallback(() => {\n        Linking.openURL(props.href);\n    }, []);\n\n    return (\n        <Text {...props} onPress={_handlePress}>\n            {props.children}\n        </Text>\n    );\n});\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport { View, Text, Image, TouchableOpacity, Share } from 'react-native'\nimport { STYLES } from \"../styles\";\nimport { PERFORMERS, FINAL_PERF_SIZE } from \"./constants\";\nimport { Answer } from \"./model\";\nimport { Page } from \"../components/Page\";\nimport { Anchor } from \"../components/Anchor\";\n\ninterface Props {\n    answers: Answer[];\n    reset: () => void;\n    navigation: any;\n}\n\nexport const Finished: FC<Props> = memo(props => {\n    const { reset, answers, navigation } = props;\n    const [showQuizInfo, setShowQuizInfo] = useState<boolean>();\n    const [shareError, setShareError] = useState<string>();\n\n    const points = answers.reduce((val, next) => {\n        return val + next.points;\n    }, 0);\n    const performers = PERFORMERS.filter((perf) => perf.points >= points);\n    const performer = performers[0];\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            navigation.navigate('Home');\n            reset();\n        }, 500);\n    }, []);\n\n    const onShare = useCallback(async () => {\n        try {\n            const result = await Share.share({\n                message: 'RubeFest Circus - I am a ' + performer.name + '!',\n                url: 'https://corynathe.github.io/rubefest/',\n            });\n            if (result.action === Share.sharedAction) {\n                if (result.activityType) {\n                    // shared with activity type of result.activityType\n                } else {\n                    // shared\n                }\n            } else if (result.action === Share.dismissedAction) {\n                // dismissed\n            }\n        } catch (error) {\n            if (error?.message.toLowerCase().indexOf('cancel') === -1) {\n                setShareError(error?.message || 'Sorry! Sharing not supported on this device.');\n            }\n        }\n    }, [performer]);\n\n    const onQuizInfo = useCallback(() => {\n        setShowQuizInfo(true);\n    }, []);\n\n    const closeQuizInfo = useCallback(() => {\n        setShowQuizInfo(false);\n    }, []);\n\n    return (\n        <Page>\n            {showQuizInfo ? (\n                <>\n                    <Text style={[STYLES.title, { fontSize: 30 }]}>Meet the performers!</Text>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[0].name} image={PERFORMERS[0].image} />\n                        <ShowPerformer name={PERFORMERS[1].name} image={PERFORMERS[1].image} />\n                        <ShowPerformer name={PERFORMERS[2].name} image={PERFORMERS[2].image} />\n                    </View>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[3].name} image={PERFORMERS[3].image} />\n                        <ShowPerformer name={PERFORMERS[4].name} image={PERFORMERS[4].image} />\n                        <ShowPerformer name={PERFORMERS[5].name} image={PERFORMERS[5].image} />\n                    </View>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[6].name} image={PERFORMERS[6].image} />\n                        <ShowPerformer name={PERFORMERS[7].name} image={PERFORMERS[7].image} />\n                        <ShowPerformer name={PERFORMERS[8].name} image={PERFORMERS[8].image} />\n                    </View>\n                    <TouchableOpacity style={STYLES.button} onPress={closeQuizInfo}>\n                        <Text style={STYLES.buttonText}>\n                            Close Quiz Info\n                        </Text>\n                    </TouchableOpacity>\n                    <View style={{ paddingTop: 10 }}>\n                        <Text style={{ fontSize: 10 }}>\n                            Circus icons created by{' '}\n                            <Anchor href=\"https://www.flaticon.com/free-icons/circus\">\n                                Freepik - Flaticon\n                            </Anchor>\n                        </Text>\n                        <Text style={{ fontSize: 10 }}>\n                            Fonts and color palette by{' '}\n                            <Anchor href=\"https://slidesgo.com/theme/circus-background\">\n                                slidesgo\n                            </Anchor>\n                        </Text>\n                    </View>\n                </>\n            ) : (\n                <>\n                    <Text style={STYLES.title}>\n                        You are a ...\n                    </Text>\n                    <Image source={performer.image} style={{ width: FINAL_PERF_SIZE, height: FINAL_PERF_SIZE }} />\n                    <Text style={STYLES.subtitle}>\n                        {performer.name}\n                    </Text>\n                    <View style={[STYLES.row]}>\n                        <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                            <Text style={STYLES.buttonText}>\n                                Home\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={[STYLES.button, STYLES.buttonBlue]} onPress={onShare}>\n                            <Text style={[STYLES.buttonText, STYLES.buttonTextBlue]}>\n                                Share\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={STYLES.button} onPress={onQuizInfo}>\n                            <Text style={STYLES.buttonText}>\n                                Quiz Info\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                    {shareError && (\n                        <Text style={[STYLES.error]}>{shareError}</Text>\n                    )}\n                </>\n            )}\n        </Page>\n    )\n});\n\ninterface PerfProps {\n    name: string;\n    image: any\n}\n\nconst ShowPerformer: FC<PerfProps> = memo(props => {\n    return (\n        <View style={{ justifyContent: 'space-around', alignItems: 'center', width: 120, padding: 10 }}>\n            <Image source={props.image} style={{ width: 50, height: 50 }} />\n            <Text style={[STYLES.infoText]}>{props.name}</Text>\n        </View>\n    );\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\n\nimport { QuestionDisplay } from \"./Question\";\nimport { QUESTIONS, TOTAL_QUESTIONS } from \"./constants\";\nimport { Answer, Question } from \"./model\";\nimport { GetStarted } from \"../components/GetStarted\";\nimport { Finished } from \"./Finished\";\nimport circus from '../assets/images/circus.png';\n\nexport const Quiz: FC<NativeStackScreenProps> = memo(props => {\n    const { navigation } = props;\n    const [getStarted, setGetStarted] = useState<boolean>(true);\n    const [answers, setAnswers] = useState<Answer[]>([]);\n    const questionIndex = useMemo(() => answers.length, [answers]);\n    const [quizQuestions, setQuizQuestions] = useState<Question[]>([]);\n    const currentQuestion = useMemo(() => quizQuestions[questionIndex], [quizQuestions, questionIndex]);\n\n    const restartQuiz = useCallback(() => {\n        setGetStarted(true);\n        setAnswers([]);\n    }, []);\n\n    const startQuiz = useCallback(() => {\n        setQuizQuestions([...QUESTIONS].sort(() => 0.5 - Math.random()).slice(0, TOTAL_QUESTIONS));\n        setGetStarted(false);\n    }, []);\n\n    const onNext = useCallback((answer: Answer) => {\n        const newAnswers = [...answers];\n        newAnswers.push(answer);\n        setAnswers(newAnswers);\n    }, [answers]);\n\n    if (getStarted) {\n        return (\n            <GetStarted\n                next={startQuiz}\n                icon={circus}\n                title={'RubeFest Circus'}\n                description={'Which Performer Are You?'}\n                buttonText={'Get Started'}\n            />\n        );\n    }\n\n    if (questionIndex >= quizQuestions.length) {\n        return <Finished answers={answers} reset={restartQuiz} navigation={navigation} />\n    }\n\n    return (\n        <QuestionDisplay\n            key={questionIndex}\n            status={`Question ${answers.length + 1} of ${quizQuestions.length}`}\n            question={currentQuestion}\n            next={onNext}\n            navigation={navigation}\n        />\n    );\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\n\nimport { STYLES } from \"../styles\";\nimport { Page } from '../components/Page';\nimport { GetStarted } from '../components/GetStarted';\nimport ball from '../assets/images/crystal-ball.png';\n\nexport const CrystalBall: FC<NativeStackScreenProps> = memo(props => {\n    const { navigation } = props;\n    const [getStarted, setGetStarted] = useState<boolean>(true);\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            navigation.navigate('Home');\n        }, 500);\n    }, []);\n\n    const startCrystalBall = useCallback(() => {\n        setGetStarted(false);\n    }, []);\n\n    if (getStarted) {\n        return (\n            <GetStarted\n                next={startCrystalBall}\n                icon={ball}\n                title={'Cletus\\' Crystal Ball'}\n                description={'Ask anything. Cletus has the answers!'}\n                buttonText={'Get Started'}\n            />\n        )\n    }\n\n    return (\n        <Page hideHeaderFooter navigation={navigation}>\n            <View>\n                <Text>\n                    Cletus' Crystal Ball, coming soon...\n                </Text>\n            </View>\n            <View>\n                <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                    <Text style={STYLES.buttonText}>\n                        Home\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        </Page>\n    )\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack';\n\nimport { STYLES } from \"../styles\";\nimport { Page } from '../components/Page';\nimport { GetStarted } from '../components/GetStarted';\nimport card from '../assets/images/tarot-card.png';\n\nexport const TarotCards: FC<NativeStackScreenProps> = memo(props => {\n    const { navigation } = props;\n    const [getStarted, setGetStarted] = useState<boolean>(true);\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            navigation.navigate('Home');\n        }, 500);\n    }, []);\n\n    const startTarot = useCallback(() => {\n        setGetStarted(false);\n    }, []);\n\n    if (getStarted) {\n        return (\n            <GetStarted\n                next={startTarot}\n                icon={card}\n                title={'Cletus\\' Tarot Reading'}\n                description={'The future lies in Cletus\\' hands!'}\n                buttonText={'Get Started'}\n            />\n        )\n    }\n\n    return (\n        <Page hideHeaderFooter navigation={navigation}>\n            <View>\n                <Text>\n                    Cletus' Tarot Reading, coming soon...\n                </Text>\n            </View>\n            <View>\n                <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                    <Text style={STYLES.buttonText}>\n                        Home\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        </Page>\n    )\n});\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { Home } from \"./Home\";\nimport { Quiz } from \"./quiz/Quiz\";\nimport { CrystalBall } from \"./ball/CrystalBall\";\nimport { TarotCards } from \"./tarot/TarotCards\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n        <NavigationContainer linking={LinkingConfiguration}>\n            <Stack.Navigator>\n                <Stack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Quiz\" component={Quiz} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Ball\" component={CrystalBall} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Tarot\" component={TarotCards} options={{ headerShown: false }} />\n            </Stack.Navigator>\n        </NavigationContainer>\n        <StatusBar  />\n    </SafeAreaProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/circus.999d22df.png\";","module.exports = __webpack_public_path__ + \"static/media/crystal-ball.5f58cbfe.png\";","module.exports = __webpack_public_path__ + \"static/media/tarot-card.0d6c6e10.png\";"],"sourceRoot":""}