{"version":3,"sources":["assets/images/circus.png","assets/images/clown.png","assets/images/lion.png","assets/images/snake.png","assets/images/magic-wand.png","assets/images/ring.png","assets/images/trapeze.png","assets/images/unicycle.png","assets/images/juggling.png","assets/images/tightrope-walker.png","quiz/constants.ts","quiz/styles.ts","quiz/Page.tsx","quiz/Question.tsx","quiz/GetStarted.tsx","quiz/Finished.tsx","quiz/Quiz.tsx","App.tsx"],"names":["module","exports","QUESTIONS","text","answers","points","PERFORMERS","name","image","clown","juggling","magic","unicycle","ring","trapeze","tightrope","lion","snake","THEME1","STYLES","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","main","row","flexDirection","width","footerTitle","paddingTop","fontSize","fontFamily","color","headerTitle","textTransform","title","paddingBottom","textAlign","subtitle","question","answerBox","padding","margin","borderRadius","answerSelected","answerText","button","marginTop","buttonText","Page","memo","props","children","status","useFonts","Rye_400Regular","Livvic_400Regular","fontsLoaded","insets","useSafeAreaInsets","View","style","top","bottom","Image","source","circus","height","undefined","Text","QuestionDisplay","next","useState","selectedAnswer","setSelectedAnswer","onAnswerClick","useCallback","answer","setTimeout","map","TouchableOpacity","onPress","GetStarted","onClick","Finished","reset","reduce","val","performer","filter","perf","Quiz","getStarted","setGetStarted","setAnswers","questionIndex","useMemo","length","currentQuestion","restartQuiz","startQuiz","onNext","newAnswers","push","App"],"mappings":"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","file":"static/js/app.74c0eb5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circus.999d22df.png\";","module.exports = __webpack_public_path__ + \"static/media/clown.8188e9df.png\";","module.exports = __webpack_public_path__ + \"static/media/lion.c830fd27.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.d78135c9.png\";","module.exports = __webpack_public_path__ + \"static/media/magic-wand.c4a9018f.png\";","module.exports = __webpack_public_path__ + \"static/media/ring.d7271b62.png\";","module.exports = __webpack_public_path__ + \"static/media/trapeze.70db2279.png\";","module.exports = __webpack_public_path__ + \"static/media/unicycle.1adcc726.png\";","module.exports = __webpack_public_path__ + \"static/media/juggling.4bd31626.png\";","module.exports = __webpack_public_path__ + \"static/media/tightrope-walker.51f08343.png\";","import { Question } from \"./model\";\nimport clown from '../assets/images/clown.png';\nimport lion from '../assets/images/lion.png';\nimport snake from '../assets/images/snake.png';\nimport magic from '../assets/images/magic-wand.png';\nimport ring from '../assets/images/ring.png';\nimport trapeze from '../assets/images/trapeze.png';\nimport unicycle from '../assets/images/unicycle.png';\nimport juggling from '../assets/images/juggling.png';\nimport tightrope from '../assets/images/tightrope-walker.png';\n\nexport const ACTION_TIMER = 1500;\n\nexport const QUESTIONS: Question[] = [{\n    text: 'If you found yourself up on the tightrope, what would you say?',\n    answers: [{\n        text: 'GET ME DOWN!',\n        points: 1,\n    },{\n        text: 'This isn\\'t so bad.',\n        points: 2,\n    },{\n        text: 'That net looks like it should catch me.',\n        points: 3,\n    },{\n        text: 'HI MOM!',\n        points: 4,\n    }]\n},{\n    text: 'What snack would you choose at the circus?',\n    answers: [{\n        text: 'Cotton Candy',\n        points: 1,\n    },{\n        text: 'Ice Cream',\n        points: 2,\n    },{\n        text: 'Popcorn',\n        points: 3,\n    },{\n        text: 'Peanuts',\n        points: 4,\n    }]\n},{\n    text: 'If you could pick any circus animal as a pet, which would you choose?',\n    answers: [{\n        text: 'Elephant',\n        points: 1,\n    },{\n        text: 'Monkey',\n        points: 2,\n    },{\n        text: 'Lion',\n        points: 3,\n    },{\n        text: 'Tiger',\n        points: 4,\n    }]\n},{\n    text: 'If the circus needed a new musical act, would you...',\n    answers: [{\n        text: 'Run out the door as fast as you could',\n        points: 1,\n    },{\n        text: 'Stay in your seat and clap along',\n        points: 2,\n    },{\n        text: 'Join the back-up singers',\n        points: 3,\n    },{\n        text: 'Run up on stage and grab the microphone',\n        points: 4,\n    }]\n},{\n    text: 'If you and your fellow clowns were getting into a tiny car, would you...',\n    answers: [{\n        text: 'Make a run for it',\n        points: 1,\n    },{\n        text: 'Be the last one in',\n        points: 2,\n    },{\n        text: 'Join them somewhere in the middle',\n        points: 3,\n    },{\n        text: 'Be the first one in',\n        points: 4,\n    }]\n},{\n    text: 'If you couldn\\'t pay for your circus ticket and had to work it off, would you...',\n    answers: [{\n        text: 'Sell popcorn at the concession stands',\n        points: 1,\n    },{\n        text: 'Fold the acrobats tights',\n        points: 2,\n    },{\n        text: 'Shovel the elephant poop',\n        points: 3,\n    },{\n        text: 'Give the lion a bath',\n        points: 4,\n    }]\n},{\n    text: 'If you were the motorcycle driver jumping through the flaming hoops, would you...',\n    answers: [{\n        text: 'Get a fire extinguisher',\n        points: 1,\n    },{\n        text: 'Use a stunt double',\n        points: 2,\n    },{\n        text: 'Close your eyes and drive as fast as you can',\n        points: 3,\n    },{\n        text: 'Add more hoops',\n        points: 4,\n    }]\n},{\n    text: 'If you were part of a famous juggling act, what would you juggle?',\n    answers: [{\n        text: 'Stuffed animals',\n        points: 1,\n    },{\n        text: 'Bowling pins',\n        points: 2,\n    },{\n        text: 'Torches lit on fire',\n        points: 3,\n    },{\n        text: 'Knives',\n        points: 4,\n    }]\n},{\n    text: 'If you owned the circus, what would you name it?',\n    answers: [{\n        text: 'Under the Big Top',\n        points: 1,\n    },{\n        text: 'Send in the Clowns',\n        points: 2,\n    },{\n        text: 'Acro-glad You Are Here',\n        points: 3,\n    },{\n        text: 'Lion Around All Day',\n        points: 4,\n    }]\n},{\n    text: 'If working for the circus made you rich, what would you do with the money?',\n    answers: [{\n        text: 'Let everyone in for free',\n        points: 1,\n    },{\n        text: 'Put on even more shows',\n        points: 2,\n    },{\n        text: 'Use it to buy more animals',\n        points: 3,\n    },{\n        text: 'Take a nap',\n        points: 4,\n    }]\n}];\n\nexport const PERFORMERS = [{\n    name: 'Clown',\n    points: 14,\n    image: clown,\n},{\n    name: 'Juggler',\n    points: 17,\n    image: juggling,\n},{\n    name: 'Magician',\n    points: 20,\n    image: magic,\n},{\n    name: 'Unicyclist',\n    points: 23,\n    image: unicycle,\n},{\n    name: 'Ringmaster',\n    points: 26,\n    image: ring,\n},{\n    name: 'Trapeze Artist',\n    points: 29,\n    image: trapeze,\n},{\n    name: 'Tightrope Walker',\n    points: 33,\n    image: tightrope,\n},{\n    name: 'Lion Tamer',\n    points: 36,\n    image: lion,\n},{\n    name: 'Snake Charmer',\n    points: 40,\n    image: snake,\n}];","import { StyleSheet, StatusBar } from \"react-native\";\n\nconst THEME1 = {\n    yellow: '#f2bd4d',\n    orange: '#ec5d37',\n    blue: '#0da9b1',\n    light: '#ffedd4',\n    green: '#004649',\n}\nconst THEME2 = {\n    navy: '#3e4f6b',\n    brown: '#302d2c',\n    light: '#f2e4d0',\n    tan: '#eacaa4',\n    orange: '#f35519',\n    yellow: '#fdd15b',\n    blue: '#9fc9c1',\n}\n\nexport const WIDTH = 350;\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        backgroundColor: THEME1.light,\n    },\n    main: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: THEME1.light,\n    },\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: WIDTH,\n    },\n    footerTitle: {\n        paddingTop: 10,\n        fontSize: 20,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.blue,\n    },\n    headerTitle: {\n        paddingTop: 10,\n        fontSize: 25,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    title: {\n        width: WIDTH,\n        paddingBottom: 40,\n        textAlign: 'center',\n        fontSize: 50,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    subtitle: {\n        textAlign: 'center',\n        fontSize: 60,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.orange,\n        width: WIDTH,\n    },\n    question: {\n        textAlign: 'left',\n        fontSize: 25,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.orange,\n        paddingBottom: 20,\n        width: WIDTH,\n    },\n    answerBox: {\n        width: WIDTH,\n        padding: 20,\n        margin: 10,\n        borderRadius: 10,\n        backgroundColor: THEME1.yellow,\n    },\n    answerSelected: {\n        backgroundColor: THEME1.orange,\n        color: THEME1.green,\n    },\n    answerText: {\n        fontSize: 20,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.green,\n    },\n    button: {\n        marginTop: 40,\n        padding: 20,\n        backgroundColor: THEME1.yellow,\n        borderRadius: 10,\n    },\n    buttonText: {\n        fontSize: 20,\n        textTransform: 'uppercase',\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.green,\n    },\n});","import React, { FC, memo } from 'react';\nimport { View, Image, Text } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { STYLES } from \"./styles\";\nimport { Rye_400Regular, useFonts } from \"@expo-google-fonts/rye\";\nimport { Livvic_400Regular } from \"@expo-google-fonts/livvic\";\nimport circus from '../assets/images/circus.png';\n\ninterface Props {\n    status?: string;\n}\n\nexport const Page: FC<Props> = memo(props => {\n    const { children, status } = props;\n    const [fontsLoaded] = useFonts({ Rye_400Regular, Livvic_400Regular });\n    const insets = useSafeAreaInsets();\n\n    if (!fontsLoaded) return null;\n\n    return (\n        <View style={[STYLES.container, { paddingTop: insets.top, paddingBottom: insets.bottom }]}>\n            <View style={[STYLES.row]}>\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n                {status !== undefined && <Text style={STYLES.headerTitle}>RubeFest</Text>}\n                {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n            </View>\n            <View style={STYLES.main}>\n                {children}\n            </View>\n            <View style={[STYLES.row]}>\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n                {status !== undefined && <Text style={STYLES.footerTitle}>{status}</Text>}\n                {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n            </View>\n        </View>\n    )\n});\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native'\nimport { Question, Answer } from \"./model\";\nimport { ACTION_TIMER } from \"./constants\";\nimport { STYLES } from \"./styles\";\nimport { Page } from \"./Page\";\n\ninterface Props {\n    status: string;\n    question: Question;\n    next: (selectedAnswer: Answer) => void;\n}\n\nexport const QuestionDisplay: FC<Props> = memo(props => {\n    const { question, next, status } = props;\n    const [selectedAnswer, setSelectedAnswer] = useState<Answer>();\n\n    const onAnswerClick = useCallback((answer: Answer) => {\n        if (selectedAnswer) return;\n        setSelectedAnswer(answer);\n\n        setTimeout(() => {\n            next(answer);\n        }, ACTION_TIMER);\n    }, [selectedAnswer]);\n\n    return (\n        <Page status={status}>\n            <View>\n                <Text style={STYLES.question}>\n                    {question.text}\n                </Text>\n                {question.answers.map((answer) => {\n                    return (\n                        <TouchableOpacity\n                            key={answer.points}\n                            onPress={() => onAnswerClick(answer)}\n                            style={[\n                                STYLES.answerBox, answer === selectedAnswer ? STYLES.answerSelected : undefined\n                            ]}\n                        >\n                            <Text style={STYLES.answerText}>\n                                {answer.text}\n                            </Text>\n                        </TouchableOpacity>\n                    )\n                })}\n            </View>\n        </Page>\n    )\n});\n","import React, { FC, memo, useCallback } from 'react';\nimport { Text, TouchableOpacity } from 'react-native'\nimport { STYLES } from \"./styles\";\nimport { Page } from \"./Page\";\n\ninterface Props {\n    next: () => void;\n}\n\nexport const GetStarted: FC<Props> = memo(props => {\n    const { next } = props;\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            next();\n        }, 500);\n    }, []);\n\n    return (\n        <Page>\n            <Text style={STYLES.title}>\n                RubeFest\n            </Text>\n            <Text style={STYLES.subtitle}>\n                Which Circus Performer Are You?\n            </Text>\n            <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                <Text style={STYLES.buttonText}>\n                    Click to Find Out\n                </Text>\n            </TouchableOpacity>\n        </Page>\n    )\n});\n","import React, { FC, memo, useCallback } from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native'\nimport { STYLES, WIDTH } from \"./styles\";\nimport { PERFORMERS } from \"./constants\";\nimport { Answer } from \"./model\";\nimport { Page } from \"./Page\";\n\ninterface Props {\n    answers: Answer[];\n    reset: () => void;\n}\n\nexport const Finished: FC<Props> = memo(props => {\n    const { reset, answers } = props;\n\n    const points = answers.reduce((val, next) => {\n        return val + next.points;\n    }, 0);\n    const performers = PERFORMERS.filter((perf) => perf.points >= points);\n    const performer = performers[0];\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            reset();\n        }, 500);\n    }, []);\n\n    return (\n        <Page>\n            <Text style={STYLES.title}>\n                You are a ...\n            </Text>\n            <Image source={performer.image} style={{ width: 200, height: 200 }} />\n            <Text style={STYLES.subtitle}>\n                {performer.name}\n            </Text>\n            <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                <Text style={STYLES.buttonText}>\n                    Restart\n                </Text>\n            </TouchableOpacity>\n\n            {/*<View>*/}\n            {/*    <a href=\"https://www.flaticon.com/free-icons/circus\" title=\"circus icons\">*/}\n            {/*        <Text>*/}\n            {/*            Circus icons created by Freepik - Flaticon*/}\n            {/*        </Text>*/}\n            {/*    </a>*/}\n            {/*</View>*/}\n        </Page>\n    )\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\n\nimport { QuestionDisplay } from \"./Question\";\nimport { QUESTIONS } from \"./constants\";\nimport { Answer } from \"./model\";\nimport { GetStarted } from \"./GetStarted\";\nimport { Finished } from \"./Finished\";\n\nexport const Quiz: FC = memo(() => {\n    const [getStarted, setGetStarted] = useState<boolean>(true);\n    const [answers, setAnswers] = useState<Answer[]>([]);\n    const questionIndex = useMemo(() => answers.length, [answers]);\n    const currentQuestion = useMemo(() => QUESTIONS[questionIndex], [questionIndex]);\n\n    const restartQuiz = useCallback(() => {\n        setGetStarted(true);\n        setAnswers([]);\n    }, []);\n\n    const startQuiz = useCallback(() => {\n        setGetStarted(false);\n    }, []);\n\n    const onNext = useCallback((answer: Answer) => {\n        const newAnswers = [...answers];\n        newAnswers.push(answer);\n        setAnswers(newAnswers);\n    }, [answers]);\n\n    if (questionIndex >= QUESTIONS.length) {\n        return <Finished answers={answers} reset={restartQuiz} />\n    }\n\n    if (getStarted) {\n        return <GetStarted next={startQuiz}/>\n    }\n\n    return (\n        <QuestionDisplay\n            key={questionIndex}\n            status={`Question ${answers.length + 1} of ${QUESTIONS.length}`}\n            question={currentQuestion}\n            next={onNext}\n        />\n    );\n});\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Quiz } from \"./quiz/Quiz\";\n\nexport default function App() {\n  return (\n      <SafeAreaProvider>\n        <Quiz />\n      </SafeAreaProvider>\n  );\n}\n"],"sourceRoot":""}