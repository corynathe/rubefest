{"version":3,"sources":["assets/images/circus.png","assets/images/clown.png","assets/images/lion.png","assets/images/snake.png","assets/images/magic-wand.png","assets/images/ring.png","assets/images/trapeze.png","assets/images/unicycle.png","assets/images/juggling.png","assets/images/tightrope-walker.png","quiz/constants.ts","quiz/styles.ts","quiz/Page.tsx","quiz/Question.tsx","quiz/GetStarted.tsx","quiz/Anchor.tsx","quiz/Finished.tsx","quiz/Quiz.tsx","App.tsx"],"names":["module","exports","QUESTIONS","text","answers","points","PERFORMERS","name","image","clown","juggling","magic","unicycle","ring","trapeze","tightrope","lion","snake","THEME1","STYLES","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","main","row","flexDirection","width","rowCenter","footerTitle","paddingTop","fontSize","fontFamily","color","headerTitle","textTransform","title","paddingBottom","textAlign","subtitle","question","paddingLeft","paddingRight","answerBox","padding","margin","borderRadius","answerSelected","answerText","answerSelectedText","button","marginTop","buttonText","buttonBlue","buttonTextBlue","infoText","error","Page","memo","props","children","status","useFonts","Rye_400Regular","Livvic_400Regular","fontsLoaded","insets","useSafeAreaInsets","View","style","top","bottom","Image","source","circus","height","undefined","Text","QuestionDisplay","next","useState","selectedAnswer","setSelectedAnswer","useMemo","sort","Math","random","onAnswerClick","useCallback","answer","setTimeout","map","TouchableOpacity","onPress","GetStarted","onClick","Anchor","_handlePress","Linking","href","Finished","reset","showQuizInfo","setShowQuizInfo","shareError","setShareError","reduce","val","performer","filter","perf","onShare","a","async","Share","share","message","url","onQuizInfo","closeQuizInfo","ShowPerformer","Quiz","getStarted","setGetStarted","setAnswers","questionIndex","length","quizQuestions","setQuizQuestions","currentQuestion","restartQuiz","startQuiz","slice","onNext","newAnswers","push","App","StatusBar"],"mappings":"kIAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,+SCe9BC,EAAwB,CAAC,CAClCC,KAAM,iEACNC,QAAS,CAAC,CACND,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,0CACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,KAEd,CACEF,KAAM,6CACNC,QAAS,CAAC,CACND,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,YACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,GACV,CACEF,KAAM,UACNE,OAAQ,KAEd,CACEF,KAAM,wEACNC,QAAS,CAAC,CACND,KAAM,WACNE,OAAQ,GACV,CACEF,KAAM,SACNE,OAAQ,GACV,CACEF,KAAM,OACNE,OAAQ,GACV,CACEF,KAAM,QACNE,OAAQ,KAEd,CACEF,KAAM,uDACNC,QAAS,CAAC,CACND,KAAM,wCACNE,OAAQ,GACV,CACEF,KAAM,mCACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,0CACNE,OAAQ,KAEd,CACEF,KAAM,2EACNC,QAAS,CAAC,CACND,KAAM,oBACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,oCACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,KAEd,CACEF,KAAM,kFACNC,QAAS,CAAC,CACND,KAAM,wCACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,uBACNE,OAAQ,KAEd,CACEF,KAAM,oFACNC,QAAS,CAAC,CACND,KAAM,0BACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,+CACNE,OAAQ,GACV,CACEF,KAAM,iBACNE,OAAQ,KAEd,CACEF,KAAM,oEACNC,QAAS,CAAC,CACND,KAAM,kBACNE,OAAQ,GACV,CACEF,KAAM,eACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,GACV,CACEF,KAAM,SACNE,OAAQ,KAEd,CACEF,KAAM,mDACNC,QAAS,CAAC,CACND,KAAM,oBACNE,OAAQ,GACV,CACEF,KAAM,qBACNE,OAAQ,GACV,CACEF,KAAM,yBACNE,OAAQ,GACV,CACEF,KAAM,sBACNE,OAAQ,KAEd,CACEF,KAAM,6EACNC,QAAS,CAAC,CACND,KAAM,2BACNE,OAAQ,GACV,CACEF,KAAM,yBACNE,OAAQ,GACV,CACEF,KAAM,6BACNE,OAAQ,GACV,CACEF,KAAM,aACNE,OAAQ,KAEd,CACEF,KAAM,6CACNC,QAAS,CAAC,CACND,KAAM,gBACNE,OAAQ,GACV,CACEF,KAAM,cACNE,OAAQ,GACV,CACEF,KAAM,aACNE,OAAQ,GACV,CACEF,KAAM,YACNE,OAAQ,MAMHC,EAAa,CAAC,CACvBC,KAAM,QACNF,OAAQ,GACRG,MAAOC,KACT,CACEF,KAAM,UACNF,OAAQ,GACRG,MAAOE,KACT,CACEH,KAAM,WACNF,OAAQ,GACRG,MAAOG,KACT,CACEJ,KAAM,aACNF,OAAQ,GACRG,MAAOI,KACT,CACEL,KAAM,aACNF,OAAQ,GACRG,MAAOK,KACT,CACEN,KAAM,iBACNF,OAAQ,GACRG,MAAOM,KACT,CACEP,KAAM,mBACNF,OAAQ,GACRG,MAAOO,KACT,CACER,KAAM,aACNF,OAAQ,GACRG,MAAOQ,KACT,CACET,KAAM,gBACNF,OAAQ,GACRG,MAAOS,MCzNLC,EACM,UADNA,EAEM,UAFNA,EAGI,UAHJA,EAIK,UAJLA,EAKK,UAcEC,E,KAASC,EAAWC,OAAO,CACpCC,UAAW,CACPC,KAAM,EACNC,WAAY,SACZC,eAAgB,eAChBC,gBAAiBR,GAErBS,KAAM,CACFJ,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,gBAAiBR,GAErBU,IAAK,CACDC,cAAe,MACfJ,eAAgB,eAChBK,MAlBa,KAoBjBC,UAAW,CACPF,cAAe,MACfJ,eAAgB,eAChBK,MAvBa,KAyBjBE,YAAa,CACTC,WAAY,GACZC,SAAU,GACVC,WAAY,iBACZC,MAAOlB,GAEXmB,YAAa,CACTJ,WAAY,GACZC,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,GAEXqB,MAAO,CACHT,MAvCa,IAwCbU,cAAe,GACfC,UAAW,SACXP,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,GAEXwB,SAAU,CACND,UAAW,SACXP,SAAU,GACVC,WAAY,oBACZC,MAAOlB,EACPY,MApDa,KAsDjBa,SAAU,CACNF,UAAW,OACXP,SAAU,GACVC,WAAY,iBACZG,cAAe,YACfF,MAAOlB,EACPsB,cAAe,GACfI,YAAa,EACbC,aAAc,EACdf,MA/Da,KAiEjBgB,UAAW,CACPhB,MAlEa,IAmEbiB,QAAS,GACTC,OAAQ,GACRC,aAAc,GACdvB,gBAAiBR,GAErBgC,eAAgB,CACZxB,gBAAiBR,GAErBiC,WAAY,CACRjB,SAAU,GACVC,WAAY,oBACZC,MAAOlB,GAEXkC,mBAAoB,CAChBhB,MAAOlB,GAEXmC,OAAQ,CACJC,UAAW,GACXP,QAAS,GACTrB,gBAAiBR,EACjB+B,aAAc,IAElBM,WAAY,CACRrB,SAAU,GACVI,cAAe,YACfH,WAAY,iBACZC,MAAOlB,GAEXsC,WAAY,CACR9B,gBAAiBR,GAErBuC,eAAgB,CACZrB,MAAOlB,GAEXwC,SAAU,CACNxB,SAAU,GACVC,WAAY,iBACZC,MAAOlB,EACPuB,UAAW,UAEfkB,MAAO,CACHzB,SAAU,GACVC,WAAY,oBACZC,MAAOlB,EACPuB,UAAW,Y,iDCtHNmB,EAAkBC,gBAAK,SAAAC,GAChC,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAClB,EAAsBC,YAAS,CAAEC,mBAAgBC,wBAA1CC,EAAP,YACMC,EAASC,cAEf,OAAKF,EAGD,eAACG,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOG,UAAW,CAAEW,WAAYoC,EAAOI,IAAKjC,cAAe6B,EAAOK,SAAhF,UACI,eAACH,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOS,KAArB,UACI,cAAC+C,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,WACvCC,IAAXf,GAAwB,cAACgB,EAAA,EAAD,CAAMR,MAAOrD,EAAOkB,YAApB,2BACb0C,IAAXf,GAAwB,cAACW,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,MAC5E,cAACH,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,SAEvD,cAACP,EAAA,EAAD,CAAMC,MAAOrD,EAAOQ,KAApB,SACKoC,IAEL,eAACQ,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOS,KAArB,UACI,cAAC+C,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,WACvCC,IAAXf,GAAwB,cAACgB,EAAA,EAAD,CAAMR,MAAOrD,EAAOa,YAApB,SAAkCgC,SAC/Ce,IAAXf,GAAwB,cAACW,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,MAC5E,cAACH,EAAA,EAAD,CAAOC,OAAQC,IAAQL,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,YAjBtC,QCJhBG,EAA6BpB,gBAAK,SAAAC,GAC3C,IAAQnB,EAA2BmB,EAA3BnB,SAAUuC,EAAiBpB,EAAjBoB,KAAMlB,EAAWF,EAAXE,OACxB,EAA4CmB,qBAA5C,WAAOC,EAAP,KAAuBC,EAAvB,KACMjF,EAAUkF,mBAAQ,kBAAM,IAAI3C,EAASvC,SAASmF,MAAK,iBAAM,GAAMC,KAAKC,cAAW,CAAC9C,IAEhF+C,EAAgBC,uBAAY,SAACC,GAC3BR,IACJC,EAAkBO,GAElBC,YAAW,WACPX,EAAKU,KHZW,SGcrB,CAACR,IAEJ,OACI,cAACxB,EAAD,CAAMI,OAAQA,EAAd,SACI,eAACO,EAAA,EAAD,WACI,cAACS,EAAA,EAAD,CAAMR,MAAOrD,EAAOwB,SAApB,SACKA,EAASxC,OAEbC,EAAQ0F,KAAI,SAACF,GACV,OACI,cAACG,EAAA,EAAD,CAEIC,QAAS,kBAAMN,EAAcE,IAC7BpB,MAAO,CACHrD,EAAO2B,UACP8C,IAAWR,EAAiBjE,EAAO+B,oBAAiB6B,GAL5D,SAQI,cAACC,EAAA,EAAD,CAAMR,MAAO,CACTrD,EAAOgC,WACPyC,IAAWR,EAAiBjE,EAAOiC,wBAAqB2B,GAF5D,SAIKa,EAAOzF,QAXPyF,EAAOvF,mBC3B3B4F,EAAwBpC,gBAAK,SAAAC,GACtC,IAAQoB,EAASpB,EAAToB,KAEFgB,EAAUP,uBAAY,WACxBE,YAAW,WACPX,MACD,OACJ,IAEH,OACI,eAACtB,EAAD,WACI,cAACoB,EAAA,EAAD,CAAMR,MAAOrD,EAAOoB,MAApB,sBAGA,cAACyC,EAAA,EAAD,CAAMR,MAAOrD,EAAOuB,SAApB,6CAGA,cAACqD,EAAA,EAAD,CAAkBvB,MAAOrD,EAAOkC,OAAQ2C,QAASE,EAAjD,SACI,cAAClB,EAAA,EAAD,CAAMR,MAAOrD,EAAOoC,WAApB,uC,unBCvBT,IAAM4C,GAAc,SAACrC,GACxB,IAAMsC,EAAeT,uBAAY,WAC7BU,IAAgBvC,EAAMwC,QACvB,IAEH,OACI,cAACtB,EAAA,EAAD,SAAUlB,GAAV,IAAiBkC,QAASI,EAA1B,SACKtC,EAAMC,aCENwC,GAAsB1C,gBAAK,SAAAC,GACpC,IAAQ0C,EAAmB1C,EAAnB0C,MAAOpG,EAAY0D,EAAZ1D,QACf,EAAwC+E,qBAAxC,WAAOsB,EAAP,KAAqBC,EAArB,KACA,EAAoCvB,qBAApC,WAAOwB,EAAP,KAAmBC,EAAnB,KAEMvG,EAASD,EAAQyG,QAAO,SAACC,EAAK5B,GAChC,OAAO4B,EAAM5B,EAAK7E,SACnB,GAEG0G,EADazG,EAAW0G,QAAO,SAACC,GAAD,OAAUA,EAAK5G,QAAUA,KACjC,GAEvB6F,EAAUP,uBAAY,WACxBE,YAAW,WACPW,MACD,OACJ,IAEGU,EAAUvB,uBAAY,oBAAAwB,EAAAC,OAAA,2EAAAD,EAAA,MAECE,IAAMC,MAAM,CAC7BC,QAAS,4BAA8BR,EAAUxG,KAAO,IACxDiH,IAAK,2CAJW,6DAOpBZ,EAAc,gDAPM,iEASzB,CAACG,IAEEU,EAAa9B,uBAAY,WAC3Be,GAAgB,KACjB,IAEGgB,EAAgB/B,uBAAY,WAC9Be,GAAgB,KACjB,IAEH,OACI,cAAC9C,EAAD,UACK6C,EACG,qCACI,cAACzB,EAAA,EAAD,CAAMR,MAAO,CAACrD,EAAOoB,MAAO,CAAEL,SAAU,KAAxC,kCACA,eAACqC,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOY,WAArB,UACI,cAAC4F,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,WAElE,eAAC+D,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOY,WAArB,UACI,cAAC4F,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,WAElE,eAAC+D,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOY,WAArB,UACI,cAAC4F,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,QAC9D,cAACmH,GAAD,CAAepH,KAAMD,EAAW,GAAGC,KAAMC,MAAOF,EAAW,GAAGE,WAElE,cAACuF,EAAA,EAAD,CAAkBvB,MAAOrD,EAAOkC,OAAQ2C,QAAS0B,EAAjD,SACI,cAAC1C,EAAA,EAAD,CAAMR,MAAOrD,EAAOoC,WAApB,+BAIJ,eAACgB,EAAA,EAAD,CAAMC,MAAO,CAAEvC,WAAY,IAA3B,UACI,eAAC+C,EAAA,EAAD,CAAMR,MAAO,CAAEtC,SAAU,IAAzB,oCAC4B,IACxB,cAAC,GAAD,CAAQoE,KAAK,6CAAb,mCAIJ,eAACtB,EAAA,EAAD,CAAMR,MAAO,CAAEtC,SAAU,IAAzB,uCAC+B,IAC3B,cAAC,GAAD,CAAQoE,KAAK,+CAAb,+BAOZ,qCACI,cAACtB,EAAA,EAAD,CAAMR,MAAOrD,EAAOoB,MAApB,2BAGA,cAACoC,EAAA,EAAD,CAAOC,OAAQmC,EAAUvG,MAAOgE,MAAO,CAAE1C,MNwF9B,IMxFsDgD,ONwFtD,OMvFX,cAACE,EAAA,EAAD,CAAMR,MAAOrD,EAAOuB,SAApB,SACKqE,EAAUxG,OAEf,eAACgE,EAAA,EAAD,CAAMC,MAAO,CAACrD,EAAOS,KAArB,UACI,cAACmE,EAAA,EAAD,CAAkBvB,MAAOrD,EAAOkC,OAAQ2C,QAASE,EAAjD,SACI,cAAClB,EAAA,EAAD,CAAMR,MAAOrD,EAAOoC,WAApB,uBAIJ,cAACwC,EAAA,EAAD,CAAkBvB,MAAO,CAACrD,EAAOkC,OAAQlC,EAAOqC,YAAawC,QAASkB,EAAtE,SACI,cAAClC,EAAA,EAAD,CAAMR,MAAO,CAACrD,EAAOoC,WAAYpC,EAAOsC,gBAAxC,qBAIJ,cAACsC,EAAA,EAAD,CAAkBvB,MAAOrD,EAAOkC,OAAQ2C,QAASyB,EAAjD,SACI,cAACzC,EAAA,EAAD,CAAMR,MAAOrD,EAAOoC,WAApB,4BAKPoD,GACG,cAAC3B,EAAA,EAAD,CAAMR,MAAO,CAACrD,EAAOwC,OAArB,SAA8BgD,YAahDgB,GAA+B9D,gBAAK,SAAAC,GACtC,OACI,eAACS,EAAA,EAAD,CAAMC,MAAO,CAAE/C,eAAgB,eAAgBD,WAAY,SAAUM,MAAO,IAAKiB,QAAS,IAA1F,UACI,cAAC4B,EAAA,EAAD,CAAOC,OAAQd,EAAMtD,MAAOgE,MAAO,CAAE1C,MAAO,GAAIgD,OAAQ,MACxD,cAACE,EAAA,EAAD,CAAMR,MAAO,CAACrD,EAAOuC,UAArB,SAAiCI,EAAMvD,aC7HtCqH,GAAW/D,gBAAK,WACzB,MAAoCsB,oBAAkB,GAAtD,WAAO0C,EAAP,KAAmBC,EAAnB,KACA,EAA8B3C,mBAAmB,IAAjD,WAAO/E,EAAP,KAAgB2H,EAAhB,KACMC,EAAgB1C,mBAAQ,kBAAMlF,EAAQ6H,SAAQ,CAAC7H,IACrD,EAA0C+E,mBAAqB,IAA/D,WAAO+C,EAAP,KAAsBC,EAAtB,KACMC,EAAkB9C,mBAAQ,kBAAM4C,EAAcF,KAAgB,CAACE,EAAeF,IAE9EK,EAAc1C,uBAAY,WAC5BmC,GAAc,GACdC,EAAW,MACZ,IAEGO,EAAY3C,uBAAY,WAC1BwC,EAAiB,IAAIjI,GAAWqF,MAAK,iBAAM,GAAMC,KAAKC,YAAU8C,MAAM,EPR/C,KOSvBT,GAAc,KACf,IAEGU,EAAS7C,uBAAY,SAACC,GACxB,IAAM6C,EAAU,IAAOrI,GACvBqI,EAAWC,KAAK9C,GAChBmC,EAAWU,KACZ,CAACrI,IAEJ,OAAIyH,EACO,cAAC5B,EAAD,CAAYf,KAAMoD,IAGzBN,GAAiBE,EAAcD,OACxB,cAAC1B,GAAD,CAAUnG,QAASA,EAASoG,MAAO6B,IAI1C,cAACpD,EAAD,CAEIjB,OAAM,aAAc5D,EAAQ6H,OAAS,GAA/B,OAAuCC,EAAcD,OAC3DtF,SAAUyF,EACVlD,KAAMsD,GAHDR,MCpCF,SAASW,KACtB,OACI,eAAC,IAAD,WACE,cAACf,GAAD,IACA,cAACgB,EAAA,EAAD,U","file":"static/js/app.297ac3fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circus.999d22df.png\";","module.exports = __webpack_public_path__ + \"static/media/clown.8188e9df.png\";","module.exports = __webpack_public_path__ + \"static/media/lion.c830fd27.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.d78135c9.png\";","module.exports = __webpack_public_path__ + \"static/media/magic-wand.c4a9018f.png\";","module.exports = __webpack_public_path__ + \"static/media/ring.d7271b62.png\";","module.exports = __webpack_public_path__ + \"static/media/trapeze.70db2279.png\";","module.exports = __webpack_public_path__ + \"static/media/unicycle.1adcc726.png\";","module.exports = __webpack_public_path__ + \"static/media/juggling.4bd31626.png\";","module.exports = __webpack_public_path__ + \"static/media/tightrope-walker.51f08343.png\";","import { Question } from \"./model\";\nimport clown from '../assets/images/clown.png';\nimport lion from '../assets/images/lion.png';\nimport snake from '../assets/images/snake.png';\nimport magic from '../assets/images/magic-wand.png';\nimport ring from '../assets/images/ring.png';\nimport trapeze from '../assets/images/trapeze.png';\nimport unicycle from '../assets/images/unicycle.png';\nimport juggling from '../assets/images/juggling.png';\nimport tightrope from '../assets/images/tightrope-walker.png';\n\nexport const ACTION_TIMER = 1500;\n\nexport const TOTAL_QUESTIONS = 10;\n\nexport const QUESTIONS: Question[] = [{\n    text: 'If you found yourself up on the tightrope, what would you say?',\n    answers: [{\n        text: 'GET ME DOWN!',\n        points: 1,\n    },{\n        text: 'This isn\\'t so bad.',\n        points: 2,\n    },{\n        text: 'That net looks like it should catch me.',\n        points: 3,\n    },{\n        text: 'HI MOM!',\n        points: 4,\n    }]\n},{\n    text: 'What snack would you choose at the circus?',\n    answers: [{\n        text: 'Cotton Candy',\n        points: 1,\n    },{\n        text: 'Ice Cream',\n        points: 2,\n    },{\n        text: 'Popcorn',\n        points: 3,\n    },{\n        text: 'Peanuts',\n        points: 4,\n    }]\n},{\n    text: 'If you could pick any circus animal as a pet, which would you choose?',\n    answers: [{\n        text: 'Elephant',\n        points: 1,\n    },{\n        text: 'Monkey',\n        points: 2,\n    },{\n        text: 'Lion',\n        points: 3,\n    },{\n        text: 'Tiger',\n        points: 4,\n    }]\n},{\n    text: 'If the circus needed a new musical act, would you...',\n    answers: [{\n        text: 'Run out the door as fast as you could',\n        points: 1,\n    },{\n        text: 'Stay in your seat and clap along',\n        points: 2,\n    },{\n        text: 'Join the back-up singers',\n        points: 3,\n    },{\n        text: 'Run up on stage and grab the microphone',\n        points: 4,\n    }]\n},{\n    text: 'If you and your fellow clowns were getting into a tiny car, would you...',\n    answers: [{\n        text: 'Make a run for it',\n        points: 1,\n    },{\n        text: 'Be the last one in',\n        points: 2,\n    },{\n        text: 'Join them somewhere in the middle',\n        points: 3,\n    },{\n        text: 'Be the first one in',\n        points: 4,\n    }]\n},{\n    text: 'If you couldn\\'t pay for your circus ticket and had to work it off, would you...',\n    answers: [{\n        text: 'Sell popcorn at the concession stands',\n        points: 1,\n    },{\n        text: 'Fold the acrobats tights',\n        points: 2,\n    },{\n        text: 'Shovel the elephant poop',\n        points: 3,\n    },{\n        text: 'Give the lion a bath',\n        points: 4,\n    }]\n},{\n    text: 'If you were the motorcycle driver jumping through the flaming hoops, would you...',\n    answers: [{\n        text: 'Get a fire extinguisher',\n        points: 1,\n    },{\n        text: 'Use a stunt double',\n        points: 2,\n    },{\n        text: 'Close your eyes and drive as fast as you can',\n        points: 3,\n    },{\n        text: 'Add more hoops',\n        points: 4,\n    }]\n},{\n    text: 'If you were part of a famous juggling act, what would you juggle?',\n    answers: [{\n        text: 'Stuffed animals',\n        points: 1,\n    },{\n        text: 'Bowling pins',\n        points: 2,\n    },{\n        text: 'Torches lit on fire',\n        points: 3,\n    },{\n        text: 'Knives',\n        points: 4,\n    }]\n},{\n    text: 'If you owned the circus, what would you name it?',\n    answers: [{\n        text: 'Under the Big Top',\n        points: 1,\n    },{\n        text: 'Send in the Clowns',\n        points: 2,\n    },{\n        text: 'Acro-glad You Are Here',\n        points: 3,\n    },{\n        text: 'Lion Around All Day',\n        points: 4,\n    }]\n},{\n    text: 'If working for the circus made you rich, what would you do with the money?',\n    answers: [{\n        text: 'Let everyone in for free',\n        points: 1,\n    },{\n        text: 'Put on even more shows',\n        points: 2,\n    },{\n        text: 'Use it to buy more animals',\n        points: 3,\n    },{\n        text: 'Take a nap',\n        points: 4,\n    }]\n},{\n    text: 'What drink would you choose at the circus?',\n    answers: [{\n        text: 'Bottled Water',\n        points: 1,\n    },{\n        text: 'Blue Slushy',\n        points: 2,\n    },{\n        text: 'Red Slushy',\n        points: 3,\n    },{\n        text: 'Cold Beer',\n        points: 4,\n    }]\n}];\n\nexport const FINAL_PERF_SIZE = 200;\n\nexport const PERFORMERS = [{\n    name: 'Clown',\n    points: 14,\n    image: clown,\n},{\n    name: 'Juggler',\n    points: 17,\n    image: juggling,\n},{\n    name: 'Magician',\n    points: 20,\n    image: magic,\n},{\n    name: 'Unicyclist',\n    points: 23,\n    image: unicycle,\n},{\n    name: 'Ringmaster',\n    points: 26,\n    image: ring,\n},{\n    name: 'Trapeze Artist',\n    points: 29,\n    image: trapeze,\n},{\n    name: 'Tightrope Walker',\n    points: 33,\n    image: tightrope,\n},{\n    name: 'Lion Tamer',\n    points: 36,\n    image: lion,\n},{\n    name: 'Snake Charmer',\n    points: 40,\n    image: snake,\n}];","import { StyleSheet, StatusBar } from \"react-native\";\n\nconst THEME1 = {\n    yellow: '#f2bd4d',\n    orange: '#ec5d37',\n    blue: '#0da9b1',\n    light: '#ffedd4',\n    green: '#004649',\n}\nconst THEME2 = {\n    navy: '#3e4f6b',\n    brown: '#302d2c',\n    light: '#f2e4d0',\n    tan: '#eacaa4',\n    orange: '#f35519',\n    yellow: '#fdd15b',\n    blue: '#9fc9c1',\n}\n\nexport const WIDTH = 350;\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        backgroundColor: THEME1.light,\n    },\n    main: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: THEME1.light,\n    },\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: WIDTH,\n    },\n    rowCenter: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        width: WIDTH,\n    },\n    footerTitle: {\n        paddingTop: 10,\n        fontSize: 20,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.blue,\n    },\n    headerTitle: {\n        paddingTop: 10,\n        fontSize: 25,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    title: {\n        width: WIDTH,\n        paddingBottom: 40,\n        textAlign: 'center',\n        fontSize: 45,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.blue,\n    },\n    subtitle: {\n        textAlign: 'center',\n        fontSize: 50,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.orange,\n        width: WIDTH,\n    },\n    question: {\n        textAlign: 'left',\n        fontSize: 23,\n        fontFamily: 'Rye_400Regular',\n        textTransform: 'uppercase',\n        color: THEME1.orange,\n        paddingBottom: 20,\n        paddingLeft: 5,\n        paddingRight: 5,\n        width: WIDTH,\n    },\n    answerBox: {\n        width: WIDTH,\n        padding: 20,\n        margin: 10,\n        borderRadius: 10,\n        backgroundColor: THEME1.yellow,\n    },\n    answerSelected: {\n        backgroundColor: THEME1.orange,\n    },\n    answerText: {\n        fontSize: 18,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.green,\n    },\n    answerSelectedText: {\n        color: THEME1.light,\n    },\n    button: {\n        marginTop: 40,\n        padding: 15,\n        backgroundColor: THEME1.yellow,\n        borderRadius: 10,\n    },\n    buttonText: {\n        fontSize: 15,\n        textTransform: 'uppercase',\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.green,\n    },\n    buttonBlue: {\n        backgroundColor: THEME1.blue,\n    },\n    buttonTextBlue: {\n        color: THEME1.light,\n    },\n    infoText: {\n        fontSize: 15,\n        fontFamily: 'Rye_400Regular',\n        color: THEME1.green,\n        textAlign: 'center',\n    },\n    error: {\n        fontSize: 20,\n        fontFamily: 'Livvic_400Regular',\n        color: THEME1.orange,\n        textAlign: 'center',\n    },\n});","import React, { FC, memo } from 'react';\nimport { View, Image, Text } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { STYLES } from \"./styles\";\nimport { Rye_400Regular, useFonts } from \"@expo-google-fonts/rye\";\nimport { Livvic_400Regular } from \"@expo-google-fonts/livvic\";\nimport circus from '../assets/images/circus.png';\n\ninterface Props {\n    status?: string;\n}\n\nexport const Page: FC<Props> = memo(props => {\n    const { children, status } = props;\n    const [fontsLoaded] = useFonts({ Rye_400Regular, Livvic_400Regular });\n    const insets = useSafeAreaInsets();\n\n    if (!fontsLoaded) return null;\n\n    return (\n        <View style={[STYLES.container, { paddingTop: insets.top, paddingBottom: insets.bottom }]}>\n            <View style={[STYLES.row]}>\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n                {status !== undefined && <Text style={STYLES.headerTitle}>RubeFest</Text>}\n                {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n            </View>\n            <View style={STYLES.main}>\n                {children}\n            </View>\n            <View style={[STYLES.row]}>\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n                {status !== undefined && <Text style={STYLES.footerTitle}>{status}</Text>}\n                {status === undefined && <Image source={circus} style={{ width: 50, height: 50 }} />}\n                <Image source={circus} style={{ width: 50, height: 50 }} />\n            </View>\n        </View>\n    )\n});\n","import React, { FC, memo, useMemo, useState, useCallback } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native'\nimport { Question, Answer } from \"./model\";\nimport { ACTION_TIMER } from \"./constants\";\nimport { STYLES } from \"./styles\";\nimport { Page } from \"./Page\";\n\ninterface Props {\n    status: string;\n    question: Question;\n    next: (selectedAnswer: Answer) => void;\n}\n\nexport const QuestionDisplay: FC<Props> = memo(props => {\n    const { question, next, status } = props;\n    const [selectedAnswer, setSelectedAnswer] = useState<Answer>();\n    const answers = useMemo(() => [...question.answers].sort(() => 0.5 - Math.random()), [question]);\n\n    const onAnswerClick = useCallback((answer: Answer) => {\n        if (selectedAnswer) return;\n        setSelectedAnswer(answer);\n\n        setTimeout(() => {\n            next(answer);\n        }, ACTION_TIMER);\n    }, [selectedAnswer]);\n\n    return (\n        <Page status={status}>\n            <View>\n                <Text style={STYLES.question}>\n                    {question.text}\n                </Text>\n                {answers.map((answer) => {\n                    return (\n                        <TouchableOpacity\n                            key={answer.points}\n                            onPress={() => onAnswerClick(answer)}\n                            style={[\n                                STYLES.answerBox,\n                                answer === selectedAnswer ? STYLES.answerSelected : undefined,\n                            ]}\n                        >\n                            <Text style={[\n                                STYLES.answerText,\n                                answer === selectedAnswer ? STYLES.answerSelectedText : undefined,\n                            ]}>\n                                {answer.text}\n                            </Text>\n                        </TouchableOpacity>\n                    )\n                })}\n            </View>\n        </Page>\n    )\n});\n","import React, { FC, memo, useCallback } from 'react';\nimport { Text, TouchableOpacity } from 'react-native'\nimport { STYLES } from \"./styles\";\nimport { Page } from \"./Page\";\n\ninterface Props {\n    next: () => void;\n}\n\nexport const GetStarted: FC<Props> = memo(props => {\n    const { next } = props;\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            next();\n        }, 500);\n    }, []);\n\n    return (\n        <Page>\n            <Text style={STYLES.title}>\n                RubeFest\n            </Text>\n            <Text style={STYLES.subtitle}>\n                Which Circus Performer Are You?\n            </Text>\n            <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                <Text style={STYLES.buttonText}>\n                    Click to Find Out\n                </Text>\n            </TouchableOpacity>\n        </Page>\n    )\n});\n","import React, { FC, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport * as Linking from 'expo-linking';\n\nexport const Anchor: FC = ((props) => {\n    const _handlePress = useCallback(() => {\n        Linking.openURL(props.href);\n    }, []);\n\n    return (\n        <Text {...props} onPress={_handlePress}>\n            {props.children}\n        </Text>\n    );\n});\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport { View, Text, Image, TouchableOpacity, Share } from 'react-native'\nimport { STYLES, WIDTH } from \"./styles\";\nimport { PERFORMERS, FINAL_PERF_SIZE } from \"./constants\";\nimport { Answer } from \"./model\";\nimport { Page } from \"./Page\";\nimport { Anchor } from \"./Anchor\";\n\ninterface Props {\n    answers: Answer[];\n    reset: () => void;\n}\n\nexport const Finished: FC<Props> = memo(props => {\n    const { reset, answers } = props;\n    const [showQuizInfo, setShowQuizInfo] = useState<boolean>();\n    const [shareError, setShareError] = useState<string>();\n\n    const points = answers.reduce((val, next) => {\n        return val + next.points;\n    }, 0);\n    const performers = PERFORMERS.filter((perf) => perf.points >= points);\n    const performer = performers[0];\n\n    const onClick = useCallback(() => {\n        setTimeout(() => {\n            reset();\n        }, 500);\n    }, []);\n\n    const onShare = useCallback(async () => {\n        try {\n            const result = await Share.share({\n                message: 'RubeFest Circus - I am a ' + performer.name + '!',\n                url: 'https://corynathe.github.io/rubefest/',\n            });\n        } catch (error) {\n            setShareError('Sorry! Sharing not supported on this device.');\n        }\n    }, [performer]);\n\n    const onQuizInfo = useCallback(() => {\n        setShowQuizInfo(true);\n    }, []);\n\n    const closeQuizInfo = useCallback(() => {\n        setShowQuizInfo(false);\n    }, []);\n\n    return (\n        <Page>\n            {showQuizInfo ? (\n                <>\n                    <Text style={[STYLES.title, { fontSize: 30 }]}>Meet the performers!</Text>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[0].name} image={PERFORMERS[0].image} />\n                        <ShowPerformer name={PERFORMERS[1].name} image={PERFORMERS[1].image} />\n                        <ShowPerformer name={PERFORMERS[2].name} image={PERFORMERS[2].image} />\n                    </View>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[3].name} image={PERFORMERS[3].image} />\n                        <ShowPerformer name={PERFORMERS[4].name} image={PERFORMERS[4].image} />\n                        <ShowPerformer name={PERFORMERS[5].name} image={PERFORMERS[5].image} />\n                    </View>\n                    <View style={[STYLES.rowCenter]}>\n                        <ShowPerformer name={PERFORMERS[6].name} image={PERFORMERS[6].image} />\n                        <ShowPerformer name={PERFORMERS[7].name} image={PERFORMERS[7].image} />\n                        <ShowPerformer name={PERFORMERS[8].name} image={PERFORMERS[8].image} />\n                    </View>\n                    <TouchableOpacity style={STYLES.button} onPress={closeQuizInfo}>\n                        <Text style={STYLES.buttonText}>\n                            Close Quiz Info\n                        </Text>\n                    </TouchableOpacity>\n                    <View style={{ paddingTop: 10 }}>\n                        <Text style={{ fontSize: 10 }}>\n                            Circus icons created by{' '}\n                            <Anchor href=\"https://www.flaticon.com/free-icons/circus\">\n                                Freepik - Flaticon\n                            </Anchor>\n                        </Text>\n                        <Text style={{ fontSize: 10 }}>\n                            Fonts and color palette by{' '}\n                            <Anchor href=\"https://slidesgo.com/theme/circus-background\">\n                                slidesgo\n                            </Anchor>\n                        </Text>\n                    </View>\n                </>\n            ) : (\n                <>\n                    <Text style={STYLES.title}>\n                        You are a ...\n                    </Text>\n                    <Image source={performer.image} style={{ width: FINAL_PERF_SIZE, height: FINAL_PERF_SIZE }} />\n                    <Text style={STYLES.subtitle}>\n                        {performer.name}\n                    </Text>\n                    <View style={[STYLES.row]}>\n                        <TouchableOpacity style={STYLES.button} onPress={onClick}>\n                            <Text style={STYLES.buttonText}>\n                                Restart\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={[STYLES.button, STYLES.buttonBlue]} onPress={onShare}>\n                            <Text style={[STYLES.buttonText, STYLES.buttonTextBlue]}>\n                                Share\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={STYLES.button} onPress={onQuizInfo}>\n                            <Text style={STYLES.buttonText}>\n                                Quiz Info\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                    {shareError && (\n                        <Text style={[STYLES.error]}>{shareError}</Text>\n                    )}\n                </>\n            )}\n        </Page>\n    )\n});\n\ninterface PerfProps {\n    name: string;\n    image: any\n}\n\nconst ShowPerformer: FC<PerfProps> = memo(props => {\n    return (\n        <View style={{ justifyContent: 'space-around', alignItems: 'center', width: 120, padding: 10 }}>\n            <Image source={props.image} style={{ width: 50, height: 50 }} />\n            <Text style={[STYLES.infoText]}>{props.name}</Text>\n        </View>\n    );\n});\n","import React, { useState, useMemo, useCallback, FC, memo } from 'react';\n\nimport { QuestionDisplay } from \"./Question\";\nimport { QUESTIONS, TOTAL_QUESTIONS } from \"./constants\";\nimport { Answer, Question } from \"./model\";\nimport { GetStarted } from \"./GetStarted\";\nimport { Finished } from \"./Finished\";\n\nexport const Quiz: FC = memo(() => {\n    const [getStarted, setGetStarted] = useState<boolean>(true);\n    const [answers, setAnswers] = useState<Answer[]>([]);\n    const questionIndex = useMemo(() => answers.length, [answers]);\n    const [quizQuestions, setQuizQuestions] = useState<Question[]>([]);\n    const currentQuestion = useMemo(() => quizQuestions[questionIndex], [quizQuestions, questionIndex]);\n\n    const restartQuiz = useCallback(() => {\n        setGetStarted(true);\n        setAnswers([]);\n    }, []);\n\n    const startQuiz = useCallback(() => {\n        setQuizQuestions([...QUESTIONS].sort(() => 0.5 - Math.random()).slice(0, TOTAL_QUESTIONS));\n        setGetStarted(false);\n    }, []);\n\n    const onNext = useCallback((answer: Answer) => {\n        const newAnswers = [...answers];\n        newAnswers.push(answer);\n        setAnswers(newAnswers);\n    }, [answers]);\n\n    if (getStarted) {\n        return <GetStarted next={startQuiz}/>\n    }\n\n    if (questionIndex >= quizQuestions.length) {\n        return <Finished answers={answers} reset={restartQuiz} />\n    }\n\n    return (\n        <QuestionDisplay\n            key={questionIndex}\n            status={`Question ${answers.length + 1} of ${quizQuestions.length}`}\n            question={currentQuestion}\n            next={onNext}\n        />\n    );\n});\n","import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Quiz } from \"./quiz/Quiz\";\n\nexport default function App() {\n  return (\n      <SafeAreaProvider>\n        <Quiz />\n        <StatusBar  />\n      </SafeAreaProvider>\n  );\n}\n"],"sourceRoot":""}